/////////////////////////////////////////////////////////
//                                                     //
// Purpose: Defines constants within the app           //
//                                                     //
// What it contains:                                   //
//      - Colours Themes                               //
//      - EN/FR Translations                           //
//      - Strings                                      //
//      - Enumerations                                 //
//                                                     //
/////////////////////////////////////////////////////////


// ################## CONSTANTS ###############################

// Different Pages in the App
export const Pages = {
    Home: "Home",
    TrendsOverTime: "TrendsOverTime",
    Overview: "Overview",
    About: "About",
    Contact: "Contact",
    Loading: "Loading"
}

// File locations for each page
export const PageSrc = {};
PageSrc[Pages.TrendsOverTime] = "./templates/trendsOverTime.html"
PageSrc[Pages.Overview] = "./templates/overview.html"
PageSrc[Pages.About] = "./templates/about.html"
PageSrc[Pages.Contact] = "./templates/contact.html"
PageSrc[Pages.Loading] = "./templates/loading.html"

// SVG Icons that are inserted to the website at runtime
export const SVGIcons = {
    EyeOpen: `
    <path class="svgOnPrimaryIconPath" d="M0 0 C70.82410998 -1.62151699 130.12337336 24.99875515 183.73095703 69.46240234 C186.32467978 71.61028802 188.92988098 73.74363467 191.53759766 75.87451172 C192.39095703 76.57189453 193.24431641 77.26927734 194.12353516 77.98779297 C194.96142578 78.67228516 195.79931641 79.35677734 196.66259766 80.06201172 C198.49604802 81.56186867 200.32937937 83.06187112 202.16259766 84.56201172 C203.07009766 85.30451172 203.97759766 86.04701172 204.91259766 86.81201172 C213.16259766 93.56201172 213.16259766 93.56201172 215.90869141 95.81201172 C217.75088276 97.31712125 219.59727916 98.81709804 221.44775391 100.31201172 C245.70344367 119.96219077 245.70344367 119.96219077 247.98291016 137.53076172 C248.43876924 146.89106815 245.59209599 156.87495452 239.54931641 164.10498047 C233.24359157 170.64570126 226.32224175 176.45863059 219.18994141 182.06982422 C214.62663973 185.66686263 210.15450331 189.37650708 205.66259766 193.06201172 C203.82949604 194.56229488 201.99616338 196.0622958 200.16259766 197.56201172 C199.25509766 198.30451172 198.34759766 199.04701172 197.41259766 199.81201172 C189.16259766 206.56201172 189.16259766 206.56201172 186.38525391 208.83154297 C184.6393093 210.26186488 182.8967984 211.69639457 181.15869141 213.13623047 C178.34131862 215.46325135 175.50859052 217.77016452 172.66259766 220.06201172 C172.01403809 220.58456543 171.36547852 221.10711914 170.69726562 221.64550781 C146.23439108 241.25726045 119.54748997 257.12778033 89.66259766 267.06201172 C88.83211914 267.33980469 88.00164062 267.61759766 87.14599609 267.90380859 C22.69796748 289.11202552 -47.07056188 282.22492551 -107.42333984 252.12841797 C-126.59055661 242.32357848 -143.98263875 229.77754711 -160.23583984 215.70263672 C-163.49462202 212.89513452 -166.87483463 210.25774566 -170.27490234 207.62451172 C-175.69129831 203.42176049 -180.91122806 199.03690812 -186.0871582 194.54272461 C-190.08092638 191.09267491 -194.16599241 187.79427182 -198.33740234 184.56201172 C-203.25354745 180.7404987 -208.08699987 176.83820572 -212.83740234 172.81201172 C-213.40072266 172.34085938 -213.96404297 171.86970703 -214.54443359 171.38427734 C-219.98997125 166.72502854 -225.14881519 161.79021088 -227.64990234 154.93701172 C-228.10816406 153.72658203 -228.10816406 153.72658203 -228.57568359 152.49169922 C-231.90378129 141.87592094 -230.53655472 132.27120094 -226.33740234 122.06201172 C-220.88583477 112.07882859 -210.61881599 105.1942666 -201.79248047 98.35961914 C-197.53126218 95.04616644 -193.41162101 91.60210329 -189.33740234 88.06201172 C-184.20434967 83.60462469 -178.95032145 79.35749662 -173.57421875 75.19775391 C-169.5016896 72.02784634 -165.59363107 68.71196132 -161.71240234 65.31201172 C-116.59555316 26.18168578 -60.12829108 1.59521474 0 0 Z M-60.33740234 66.06201172 C-61.01158203 66.63306641 -61.68576172 67.20412109 -62.38037109 67.79248047 C-81.20303432 85.18444245 -91.27774382 111.30204709 -92.50537109 136.51123047 C-92.65554296 161.40972654 -85.118709 184.68992974 -69.33740234 204.06201172 C-68.34160156 205.30337891 -68.34160156 205.30337891 -67.32568359 206.56982422 C-52.10682936 224.51738245 -30.49869663 236.20179601 -7.33740234 240.06201172 C-6.67224609 240.17287109 -6.00708984 240.28373047 -5.32177734 240.39794922 C19.66754561 243.82241199 45.82818906 237.59563776 66.47509766 223.08544922 C68.9437283 221.14911706 71.30832388 219.13535535 73.66259766 217.06201172 C74.48115234 216.38654297 75.29970703 215.71107422 76.14306641 215.01513672 C96.47096952 197.7442981 107.65145074 172.36482761 109.83105469 146.02636719 C111.47643226 117.83464692 100.71980653 92.18812408 82.66259766 71.06201172 C82.09154297 70.38783203 81.52048828 69.71365234 80.93212891 69.01904297 C63.77903014 50.45489237 37.86826325 40.23135913 12.97900391 38.85888672 C-14.97423001 38.50983489 -39.19583227 47.99159061 -60.33740234 66.06201172 Z M119.66259766 64.06201172 C121.09804861 68.0573502 123.04164553 71.64130783 125.09008789 75.34228516 C142.57444163 107.1672303 146.43820198 144.12204361 136.35009766 179.06201172 C132.9522205 190.14988922 127.67822169 200.27441688 122.08056641 210.38232422 C120.57587875 213.04850048 120.57587875 213.04850048 119.66259766 216.06201172 C136.76619483 209.84533354 151.93306169 194.08150786 165.74707031 182.64550781 C170.03704544 179.09914295 174.35209072 175.58336431 178.66259766 172.06201172 C180.49604802 170.56215476 182.32937937 169.06215232 184.16259766 167.56201172 C187.82926432 164.56201172 191.49593099 161.56201172 195.16259766 158.56201172 C196.05978516 157.82724609 196.95697266 157.09248047 197.88134766 156.33544922 C199.81609773 154.75395407 201.75382284 153.17609437 203.69384766 151.60107422 C204.67353516 150.80443359 205.65322266 150.00779297 206.66259766 149.18701172 C207.99291016 148.10806641 207.99291016 148.10806641 209.35009766 147.00732422 C210.49478516 146.04439453 210.49478516 146.04439453 211.66259766 145.06201172 C212.28134766 144.58505859 212.90009766 144.10810547 213.53759766 143.61669922 C214.9035215 142.05529877 214.9035215 142.05529877 214.62744141 139.64404297 C213.40957294 136.3848889 211.86561288 135.0028063 209.22509766 132.74951172 C207.85417969 131.57195312 207.85417969 131.57195312 206.45556641 130.37060547 C203.1817822 127.66458244 199.89165712 124.98584446 196.55712891 122.35498047 C192.92163177 119.47503874 189.32283596 116.55139987 185.72509766 113.62451172 C185.0294873 113.05893555 184.33387695 112.49335938 183.6171875 111.91064453 C179.79392942 108.80059361 175.97548046 105.68477999 172.16259766 102.56201172 C170.32938697 101.06186183 168.49604108 99.56187716 166.66259766 98.06201172 C166.06479492 97.5723291 165.46699219 97.08264648 164.85107422 96.578125 C153.35085772 87.16443359 141.88982258 77.78539312 129.53759766 69.49951172 C128.89749756 69.06936768 128.25739746 68.63922363 127.59790039 68.19604492 C124.97016549 66.46104123 122.6642979 65.06257847 119.66259766 64.06201172 Z M-103.33740234 64.06201172 C-116.84526118 72.44619996 -129.08335906 81.93366982 -141.33740234 92.06201172 C-143.16992126 93.56300656 -145.00325903 95.06300224 -146.83740234 96.56201172 C-147.74490234 97.30451172 -148.65240234 98.04701172 -149.58740234 98.81201172 C-159.67073568 107.06201172 -169.75406901 115.31201172 -179.83740234 123.56201172 C-180.73201172 124.29806641 -181.62662109 125.03412109 -182.54833984 125.79248047 C-184.49598198 127.37732652 -186.4610784 128.94085659 -188.43896484 130.48779297 C-189.43669922 131.27541016 -190.43443359 132.06302734 -191.46240234 132.87451172 C-192.37248047 133.58220703 -193.28255859 134.28990234 -194.22021484 135.01904297 C-196.36985488 136.88722762 -196.36985488 136.88722762 -197.39208984 139.01123047 C-197.30451901 142.29513691 -195.54002927 143.73111201 -193.33740234 146.06201172 C-191.85734251 147.36003211 -190.33393391 148.60999067 -188.77490234 149.81201172 C-185.11705399 152.67071138 -181.48823622 155.55378778 -177.89990234 158.49951172 C-176.98337891 159.25103516 -176.06685547 160.00255859 -175.12255859 160.77685547 C-174.20345703 161.53095703 -173.28435547 162.28505859 -172.33740234 163.06201172 C-170.50430073 164.56229488 -168.67096807 166.0622958 -166.83740234 167.56201172 C-161.33740234 172.06201172 -161.33740234 172.06201172 -155.83740234 176.56201172 C-154.92345703 177.30966797 -154.00951172 178.05732422 -153.06787109 178.82763672 C-151.29917439 180.27498223 -149.53091691 181.72286473 -147.76318359 183.17138672 C-145.97492859 184.63620547 -144.18445459 186.09831831 -142.39208984 187.55810547 C-140.15567775 189.39127702 -137.93426682 191.23743389 -135.72021484 193.09716797 C-120.25472043 206.62277069 -120.25472043 206.62277069 -102.33740234 216.06201172 C-103.57514118 212.73631159 -104.99343745 209.94195925 -106.96240234 206.99951172 C-124.7740843 177.70627988 -128.47837418 140.72656748 -120.80126953 107.75976562 C-117.2438635 93.6622386 -111.8096713 80.73652469 -103.77880859 68.60888672 C-103.0653125 67.34818359 -103.0653125 67.34818359 -102.33740234 66.06201172 C-102.83240234 65.07201172 -102.83240234 65.07201172 -103.33740234 64.06201172 Z " transform="translate(247.33740234375,115.93798828125)"/>
    <path class="svgOnPrimaryIconPath" d="M0 0 C0.95003906 -0.00773438 1.90007812 -0.01546875 2.87890625 -0.0234375 C8.27009539 -0.00848275 12.77883699 0.47128382 17.875 2.25 C17.35099609 3.37148437 17.35099609 3.37148437 16.81640625 4.515625 C16.36136719 5.50046875 15.90632813 6.4853125 15.4375 7.5 C14.98503906 8.47453125 14.53257812 9.4490625 14.06640625 10.453125 C10.42941225 18.99111746 11.57954082 26.79022818 14.875 35.25 C18.96468602 42.97496248 25.6630053 48.46102067 33.875 51.25 C44.08223323 54.12896322 52.7769932 50.9690596 61.875 46.25 C63.93838201 52.20996797 64.22504979 57.65595669 64.1875 63.9375 C64.18186035 64.91702637 64.1762207 65.89655273 64.17041016 66.90576172 C63.87154828 84.73390823 56.99490928 98.45277396 44.890625 111.3671875 C40.53098316 115.57932266 35.78783986 118.66898975 30.5 121.5625 C29.6181604 122.05097412 29.6181604 122.05097412 28.71850586 122.54931641 C19.68229709 127.25142153 10.54235236 128.77460078 0.4375 128.625 C-0.573125 128.61339844 -1.58375 128.60179687 -2.625 128.58984375 C-20.18276083 128.20470577 -35.13667925 121.52310878 -47.53515625 109.10546875 C-61.71385389 93.47254571 -64.94811279 76.21750037 -64.26416016 55.88085938 C-63.43195871 40.14787195 -54.48043985 25.73861238 -43.125 15.25 C-30.46762676 4.60957404 -16.30600591 -0.13383863 0 0 Z " transform="translate(256.125,191.75)"/>`,

    EyeClosed: `<path class="svgOnPrimaryIconPath" d="M0 0 C2.3125 2.10546875 2.3125 2.10546875 5 5 C6.1015158 6.16280466 7.20308131 7.32556222 8.3046875 8.48828125 C9.49593809 9.76194956 10.68600587 11.03672499 11.875 12.3125 C12.80916748 13.31216797 12.80916748 13.31216797 13.76220703 14.33203125 C16.86854239 17.66716876 19.92521503 21.02444317 22.875 24.5 C26.2589912 28.4116928 30.04752745 31.67648037 34 35 C34.92425781 35.81210938 35.84851563 36.62421875 36.80078125 37.4609375 C50.67185583 49.58734799 65.63394879 59.56190997 82 68 C82.74443359 68.38784668 83.48886719 68.77569336 84.25585938 69.17529297 C137.36364464 96.54393339 200.21173017 99.32145747 256.89648438 82.12109375 C288.63651956 71.91657304 316.93076141 54.52107525 341.09375 31.71875 C343.47379805 29.49225344 345.88813685 27.35426882 348.375 25.25 C353.3055855 20.96655384 357.38380038 16.05555486 361.4140625 10.9296875 C361.84154785 10.39432373 362.2690332 9.85895996 362.70947266 9.30737305 C363.94266701 7.75946451 365.15926549 6.19837772 366.375 4.63671875 C369.87223201 1.1238741 373.2215454 -0.69235105 378.2578125 -1.25 C383.30059305 -0.57481599 385.7048164 0.90598402 389 5 C390.90963875 8.81927749 390.69948469 12.85689838 390 17 C388.17656222 20.47119551 385.66370281 23.14402286 383 26 C381.87078125 27.28583984 381.87078125 27.28583984 380.71875 28.59765625 C374.89025849 35.13672003 368.74241891 41.35657602 362.5625 47.5625 C361.78092529 48.34874756 360.99935059 49.13499512 360.1940918 49.94506836 C359.45070557 50.68635986 358.70731934 51.42765137 357.94140625 52.19140625 C356.94669312 53.18442749 356.94669312 53.18442749 355.93188477 54.19750977 C354.04503426 55.95798206 352.09312857 57.4937517 350 59 C351.62836415 65.18156073 354.94225474 70.3111031 358.1875 75.75 C359.45517803 77.89669214 360.72207751 80.04384419 361.98828125 82.19140625 C362.64650879 83.30531738 363.30473633 84.41922852 363.98291016 85.56689453 C367.32186466 91.24982581 370.59456263 96.97066352 373.875 102.6875 C378.34683865 110.46986146 382.86535158 118.20153809 387.6796875 125.77734375 C390.54799278 130.6059405 390.63805763 135.52843728 390 141 C387.95835443 144.49996383 385.90910064 146.80555258 382 148 C377.02463645 148.4814868 373.87994917 148.63737988 369.64697266 145.61572266 C365.74547122 141.78824912 363.30208579 136.7127588 360.625 132 C359.93019553 130.79994667 359.2342099 129.6005765 358.53710938 128.40185547 C356.70995617 125.25096116 354.90044258 122.0903391 353.09729004 118.92565918 C352.00915738 117.01607049 350.91855584 115.10791397 349.82714844 113.20019531 C344.12333371 103.22736988 344.12333371 103.22736988 341.58056641 98.73046875 C337.22291459 91.04143612 332.67758021 83.49734358 328 76 C326.89785156 76.68964844 325.79570312 77.37929688 324.66015625 78.08984375 C273.32394248 110 273.32394248 110 253 110 C253.15913628 110.864188 253.15913628 110.864188 253.32148743 111.74583435 C254.44188217 117.83082518 255.56139002 123.91597874 256.68041992 130.0012207 C257.09621556 132.26167785 257.51222519 134.52209564 257.9284668 136.7824707 C261.90478008 158.37705774 261.90478008 158.37705774 263.765625 168.7734375 C263.99668945 170.06040527 264.22775391 171.34737305 264.46582031 172.67333984 C265.39387745 178.45291321 265.99299036 182.93763541 263.375 188.375 C260.65750127 191.37855123 258.85562442 192.7395074 255 194 C250.91101553 194.19280084 247.82484174 193.42158578 244.1875 191.5625 C238.27370776 184.63491481 237.80452463 173.20317656 236.30078125 164.53125 C236.05891876 163.16019488 235.81657501 161.78922458 235.57377625 160.41833496 C235.07022269 157.56824885 234.57050668 154.71752856 234.07397461 151.86621094 C233.43706951 148.20903052 232.7933802 144.55308662 232.14722919 140.8975296 C231.52944876 137.40083973 230.91498296 133.90356994 230.30078125 130.40625 C230.18352503 129.74021255 230.06626881 129.07417511 229.94545937 128.38795471 C229.61585515 126.51221358 229.28893939 124.63600063 228.9621582 122.75976562 C228.775793 121.69294556 228.5894278 120.62612549 228.39741516 119.52697754 C228 117 228 117 228 115 C225.98177083 115.48828125 223.96354167 115.9765625 221.9453125 116.46484375 C214.19509724 117.87303936 206.41895148 118.15826314 198.55859375 118.16796875 C197.10876854 118.17296135 197.10876854 118.17296135 195.62965393 118.17805481 C193.59514842 118.18308531 191.56063477 118.18546434 189.52612305 118.18530273 C186.46974498 118.18747706 183.41373576 118.20564136 180.35742188 118.22460938 C152.90851979 118.30283993 152.90851979 118.30283993 143 115 C142.92903862 116.06627876 142.92903862 116.06627876 142.85664368 117.15409851 C142.27681274 124.99093749 141.19351837 132.65416739 139.85546875 140.39453125 C139.64440994 141.62612473 139.43335114 142.8577182 139.21589661 144.12663269 C138.77076149 146.70951434 138.32269844 149.29189296 137.87182617 151.8737793 C137.41420754 154.50765777 136.96176967 157.1416886 136.51928711 159.77807617 C135.87391955 163.6110024 135.21067881 167.44044154 134.54296875 171.26953125 C134.34801315 172.44256302 134.15305756 173.61559479 133.95219421 174.82417297 C132.84998911 180.99947327 131.70502945 185.88168003 128 191 C124.23346358 193.2741352 121.83147887 194 117.4375 194 C113.1132124 192.74202543 111.20658706 191.13023975 108 188 C104.16243247 180.32486494 107.92602095 168.40469089 109.40625 160.46875 C109.65378471 159.10176802 109.90039027 157.7346175 110.14611816 156.36730957 C110.78888041 152.80290074 111.44256595 149.24059036 112.09918213 145.67871094 C113.15277459 139.95173721 114.18863553 134.2215234 115.22599792 128.49159241 C115.58854906 126.49735809 115.9553183 124.50393703 116.32287598 122.51062012 C116.54310425 121.3050647 116.76333252 120.09950928 116.99023438 118.85742188 C117.18564819 117.79583862 117.38106201 116.73425537 117.58239746 115.64050293 C118.07810556 112.95169173 118.07810556 112.95169173 118 110 C117.030625 109.70867187 116.06125 109.41734375 115.0625 109.1171875 C89.60225214 101.3773492 66.19350269 90.79566846 44 76 C38.59437311 84.66592343 33.40881096 93.42409433 28.375 102.3125 C26.98204745 104.76001522 25.58673073 107.20618016 24.19140625 109.65234375 C23.84279037 110.26382263 23.4941745 110.87530151 23.13499451 111.50531006 C19.54322258 117.80433288 15.9407938 124.09691088 12.3125 130.375 C11.74901855 131.36024658 11.18553711 132.34549316 10.60498047 133.3605957 C3.3876587 145.80617065 3.3876587 145.80617065 -1 148 C-5.50578601 148.41469181 -9.65938461 148.48490344 -13.9375 146.9375 C-16.84140413 144.20959006 -17.85809719 141.8063427 -19 138 C-18.72986699 131.72519607 -16.370096 127.37121111 -13.3125 122.0625 C-12.82555664 121.1977002 -12.33861328 120.33290039 -11.83691406 119.44189453 C-10.23975036 116.61896548 -8.62330611 113.80797115 -7 111 C-6.45585449 110.05850098 -5.91170898 109.11700195 -5.35107422 108.14697266 C-3.65511936 105.2203952 -1.95383597 102.29699571 -0.25 99.375 C0.32387451 98.39055908 0.89774902 97.40611816 1.48901367 96.3918457 C4.36925036 91.46294815 7.26682699 86.54584577 10.20758057 81.65286255 C11.63617337 79.26999344 13.05201661 76.87969277 14.46594238 74.48809814 C15.48373106 72.77734569 16.51860049 71.07679249 17.55371094 69.37646484 C18.16504883 68.3395752 18.77638672 67.30268555 19.40625 66.234375 C19.95603516 65.31881836 20.50582031 64.40326172 21.07226562 63.45996094 C22.25266591 61.07485155 22.25266591 61.07485155 21.38134766 58.86962891 C19.9028478 56.86850626 18.41641624 55.42843622 16.4921875 53.8515625 C-15.65899329 26.60209534 -15.65899329 26.60209534 -18.69140625 14.1640625 C-18.86270991 10.39538202 -18.21594115 7.59701377 -16.9375 4.0625 C-12.47436933 -0.68857459 -6.09397114 -2.48538431 0 0 Z " transform="translate(70,198)"/>`,

    MagnifyingGlass: `
    <path class="svgPrimaryIconPath" d="M0 0 C16.59028159 14.44570155 30.14730152 30.49908637 41.8125 49.125 C42.38049316 50.02412109 42.38049316 50.02412109 42.95996094 50.94140625 C54.7878301 69.93985698 62.08778323 91.35162657 66.8125 113.125 C67.07716064 114.26243652 67.07716064 114.26243652 67.34716797 115.42285156 C72.77379691 139.42049114 72.37891797 169.20211145 66.8125 193.125 C66.62445801 193.99157227 66.43641602 194.85814453 66.24267578 195.75097656 C61.88897078 215.52794997 55.24895555 235.41446218 44.11328125 252.453125 C42.57819335 255.60627852 42.71453769 256.85329412 43.8125 260.125 C44.163125 260.99125 44.51375 261.8575 44.875 262.75 C45.8125 265.125 45.8125 265.125 45.8125 268.125 C46.4725 268.186875 47.1325 268.24875 47.8125 268.3125 C56.48701032 270.66184654 62.17401822 276.85510456 67.13671875 284.04296875 C71.43172065 291.83425291 71.14348253 302.44666624 69.15234375 310.94140625 C65.74733458 319.41707843 58.48888791 327.08090651 50.17871094 330.71336365 C45.82473425 332.29729353 41.9858354 332.50548354 37.390625 332.39868164 C36.58920074 332.39281036 35.78777649 332.38693909 34.96206665 332.38088989 C33.23244413 332.3673134 31.50286184 332.34739842 29.77337646 332.32173347 C27.01030796 332.28445203 24.24816981 332.27234059 21.48486328 332.26768494 C13.63163703 332.25304405 5.77927237 332.2192455 -2.07324219 332.1081543 C-33.00925419 331.5419347 -33.00925419 331.5419347 -61.7588501 341.92434692 C-78.50580587 350.20354927 -100.44083584 353.17617501 -118.9375 353.36328125 C-119.74511276 353.3730751 -120.55272552 353.38286896 -121.3848114 353.39295959 C-139.63775253 353.5686484 -157.32079485 353.33911785 -175.1875 349.125 C-176.55527588 348.80354004 -176.55527588 348.80354004 -177.95068359 348.47558594 C-199.10334739 343.31236688 -222.88403667 334.61471849 -240.1875 321.125 C-243.33822128 324.25072471 -246.48543136 327.3799331 -249.62963867 330.51220703 C-250.69642297 331.57400861 -251.76410853 332.63490558 -252.83276367 333.69482422 C-258.25191644 339.07082682 -263.58704497 344.45728666 -268.54858398 350.265625 C-272.21842273 354.42911255 -276.26647209 358.24077339 -280.2265625 362.125 C-283.50450634 365.36497537 -286.67885561 368.63197069 -289.6875 372.125 C-293.93782812 377.05962131 -298.58008338 381.56753389 -303.2265625 386.125 C-306.50450634 389.36497537 -309.67885561 392.63197069 -312.6875 396.125 C-316.93782812 401.05962131 -321.58008338 405.56753389 -326.2265625 410.125 C-329.50450634 413.36497537 -332.67885561 416.63197069 -335.6875 420.125 C-339.93782812 425.05962131 -344.58008338 429.56753389 -349.2265625 434.125 C-353.77121969 438.61701638 -358.01954874 443.28367125 -362.1875 448.125 C-370.546255 457.4403855 -380.96480558 464.8263104 -393.8359375 465.55859375 C-395.41128604 465.58192981 -396.98710953 465.5828089 -398.5625 465.5625 C-399.80749268 465.55114014 -399.80749268 465.55114014 -401.07763672 465.53955078 C-413.65476838 465.20307997 -423.78694247 459.99228919 -432.4375 450.9375 C-442.18845292 439.45434187 -443.32064008 426.55323868 -442.1875 412.125 C-441.3730198 408.09914071 -440.11215873 404.74360128 -438.1875 401.125 C-437.80980469 400.39796875 -437.43210937 399.6709375 -437.04296875 398.921875 C-431.67740092 389.90901786 -423.15646293 382.52360201 -415.2734375 375.7265625 C-411.0391088 372.05437569 -407.11052195 368.12464347 -403.1875 364.125 C-398.66774688 359.51697045 -394.07817773 355.11482203 -389.1875 350.90234375 C-385.69778722 347.80113415 -382.4553338 344.45665868 -379.1875 341.125 C-374.66774688 336.51697045 -370.07817773 332.11482203 -365.1875 327.90234375 C-361.69778722 324.80113415 -358.4553338 321.45665868 -355.1875 318.125 C-350.66774688 313.51697045 -346.07817773 309.11482203 -341.1875 304.90234375 C-337.69778722 301.80113415 -334.4553338 298.45665868 -331.1875 295.125 C-327.31456286 291.17641955 -323.44483442 287.29229351 -319.25 283.68359375 C-314.6706458 279.73938971 -310.43517051 275.48302122 -306.1875 271.1875 C-305.02541016 270.01864258 -305.02541016 270.01864258 -303.83984375 268.82617188 C-301.95339243 266.9280758 -300.06933755 265.02766851 -298.1875 263.125 C-298.63738281 262.45339844 -299.08726562 261.78179687 -299.55078125 261.08984375 C-317.83689437 232.68956786 -330.0842602 198.49010531 -330.42578125 164.47265625 C-330.44040405 163.25891075 -330.44040405 163.25891075 -330.45532227 162.02064514 C-330.66440353 140.15375017 -329.5368688 119.92585706 -323.60229492 98.76123047 C-323.3699691 97.92897446 -323.13764328 97.09671844 -322.89827728 96.23924255 C-322.32909387 94.20086103 -321.75844507 92.16288879 -321.1875 90.125 C-322.21765228 90.12135437 -323.24780457 90.11770874 -324.30917358 90.11395264 C-334.04833257 90.0769068 -343.78717818 90.0190298 -353.52609825 89.94109726 C-358.53222278 89.90169767 -363.53817338 89.8694724 -368.54443359 89.85400391 C-373.38166611 89.8387877 -378.21842023 89.80425449 -383.055439 89.75669098 C-384.89483085 89.74192822 -386.73429102 89.73396193 -388.57374191 89.73311615 C-402.53259044 89.72025039 -412.44078794 88.66638883 -422.984375 78.63671875 C-430.22788558 70.37860296 -431.68817288 61.61114457 -431.453125 50.94921875 C-430.74430894 40.74435222 -425.64061778 33.88313252 -418.1875 27.125 C-412.74651173 23.10420189 -407.9059893 21.49146305 -401.1875 21.125 C-401.09339844 19.96613281 -400.99929688 18.80726562 -400.90234375 17.61328125 C-400.32280027 13.04623757 -398.83904031 9.38602807 -396.75 5.3125 C-396.39583008 4.61962891 -396.04166016 3.92675781 -395.67675781 3.21289062 C-388.28660086 -10.61881684 -376.48449961 -20.19742698 -361.66015625 -25.18359375 C-345.67455319 -29.65350171 -328.4655815 -27.54870365 -313.9375 -19.75 C-309.65704186 -17.15014335 -306.66474143 -14.31833329 -303.375 -10.5625 C-298.33045188 -5.17677471 -293.97963712 -4.74226412 -286.8125 -4.21484375 C-278.55950565 -3.44112553 -272.70671827 0.33843804 -266.1875 5.125 C-265.38570312 4.39796875 -264.58390625 3.6709375 -263.7578125 2.921875 C-254.49111973 -5.32949852 -244.65918531 -12.24267804 -234.1875 -18.875 C-233.19621094 -19.52082031 -232.20492187 -20.16664062 -231.18359375 -20.83203125 C-214.13511665 -31.42839184 -194.61816787 -38.23129226 -175.1875 -42.875 C-174.24874023 -43.09945801 -173.30998047 -43.32391602 -172.34277344 -43.55517578 C-112.0058184 -57.17122227 -46.80038678 -39.73257327 0 0 Z M-259.73046875 28.65136719 C-281.99236804 51.04203067 -297.80817081 80.48346301 -305.1875 111.125 C-305.38359863 111.91132813 -305.57969727 112.69765625 -305.78173828 113.5078125 C-312.01520206 139.52220263 -311.49781871 169.19224963 -305.1875 195.125 C-304.97851074 195.98786621 -304.76952148 196.85073242 -304.55419922 197.73974609 C-292.84044299 244.18237661 -261.75432162 283.37853119 -221.1875 308.125 C-202.87152471 319.04318315 -183.09889894 326.11299708 -162.1875 330.125 C-161.25502441 330.31191406 -160.32254883 330.49882812 -159.36181641 330.69140625 C-150.28147785 332.31902772 -141.32973422 332.43155992 -132.13623047 332.38574219 C-129.53199764 332.37487269 -126.92843271 332.38577441 -124.32421875 332.3984375 C-122.66145682 332.39711828 -120.9986953 332.39456082 -119.3359375 332.390625 C-118.56099945 332.39467346 -117.7860614 332.39872192 -116.98764038 332.40289307 C-113.18710285 332.36955081 -111.42701485 332.28467657 -108.1875 330.125 C-108.83976563 329.77308594 -109.49203125 329.42117188 -110.1640625 329.05859375 C-116.56784936 325.44111533 -121.93487402 321.67922209 -125.265625 314.9453125 C-128.46474577 311.91525096 -132.26278386 312.62117027 -136.5 312.625 C-177.03058142 311.59420494 -215.20585016 294.24920458 -244.1875 266.125 C-246.63529642 263.54616523 -248.92676991 260.86835786 -251.1875 258.125 C-251.81269531 257.38765625 -252.43789062 256.6503125 -253.08203125 255.890625 C-270.18329401 235.24768061 -282.08749239 210.45846817 -287.1875 184.125 C-287.36410156 183.21580811 -287.54070312 182.30661621 -287.72265625 181.36987305 C-289.33739524 172.12332972 -289.58788402 163.04463707 -289.5625 153.6875 C-289.56162384 152.89608612 -289.56074768 152.10467224 -289.55984497 151.28927612 C-289.46439724 125.07417815 -283.96416392 98.79659692 -270.1875 76.125 C-266.16214442 73.44142961 -262.91500362 73.44964234 -258.1875 74.125 C-255.02948727 76.09875796 -254.38092239 77.49190382 -253.30078125 81.02734375 C-252.58326766 86.79067058 -255.62638078 91.97487436 -257.875 97.125 C-261.73658249 106.35843417 -265.20812424 115.28190861 -267.1875 125.125 C-267.44587646 126.38268188 -267.44587646 126.38268188 -267.70947266 127.66577148 C-269.27213312 135.96540491 -269.58839451 144.13277214 -269.5625 152.5625 C-269.56118576 153.61272842 -269.56118576 153.61272842 -269.55984497 154.68417358 C-269.41298939 190.42800812 -255.91930892 223.33904841 -231.1875 249.125 C-229.88425781 250.54039062 -229.88425781 250.54039062 -228.5546875 251.984375 C-206.72195214 275.22763095 -173.14288088 291.3530515 -141.08203125 292.36328125 C-137.10945003 292.40876268 -133.15555517 292.31222148 -129.1875 292.125 C-128.96835937 291.42375 -128.74921875 290.7225 -128.5234375 290 C-125.28733232 280.31799425 -121.27675487 273.90303271 -112.625 268.3203125 C-110.01662625 267.04120614 -107.79137144 266.65465158 -104.9375 266.1875 C-102.34656788 265.66042105 -102.34656788 265.66042105 -100.1875 264.125 C-98.45733005 260.50655057 -97.44436703 256.92228459 -96.39453125 253.06640625 C-94.80143853 247.39127028 -91.64445225 242.84121328 -88.1875 238.125 C-87.76597656 237.53203125 -87.34445312 236.9390625 -86.91015625 236.328125 C-78.70166227 225.60457057 -64.28772958 218.96793968 -51.1875 217.125 C-37.83780962 216.02480477 -26.02784923 217.62034241 -14.1484375 224.13671875 C-12.25581677 225.27501918 -12.25581677 225.27501918 -10.1875 225.125 C8.4136261 189.62234308 15.2558977 150.69107009 3.4921875 111.6328125 C-1.18188063 97.05975907 -8.20186729 83.49807362 -17.1875 71.125 C-18.03828125 69.93777344 -18.03828125 69.93777344 -18.90625 68.7265625 C-40.88257589 39.71395684 -73.70658476 19.95283121 -109.79150391 14.74951172 C-139.46074472 10.97381274 -165.7427335 15.98206322 -192.9375 28.125 C-197.61710656 30.1053363 -200.34638066 30.8395631 -205.1875 29.125 C-207.625 27.625 -207.625 27.625 -209.1875 25.125 C-209.8085676 21.99036636 -210.02756036 19.21913536 -209.1875 16.125 C-205.528486 11.55123249 -201.37852796 9.43353206 -196.125 7.1875 C-195.34060547 6.84759033 -194.55621094 6.50768066 -193.74804688 6.1574707 C-184.77890827 2.38103794 -175.61169486 -0.47812866 -166.1875 -2.875 C-165.17042969 -3.14401123 -165.17042969 -3.14401123 -164.1328125 -3.41845703 C-142.94011251 -8.77514601 -115.28519471 -8.47642297 -94.1875 -2.875 C-92.99979004 -2.56900879 -92.99979004 -2.56900879 -91.78808594 -2.25683594 C-65.62728927 4.63709092 -42.3254575 16.61105979 -22.44140625 35.08203125 C-20.87645113 36.5005261 -19.25769275 37.86098036 -17.6015625 39.171875 C8.87036737 60.58929399 24.57592516 100.15673532 28.59562683 132.9591217 C28.93536247 136.35200824 28.99389301 139.74189221 29.015625 143.1484375 C29.02263931 143.88782059 29.02965363 144.62720367 29.03688049 145.38899231 C29.05427663 147.75939093 29.06073174 150.12953991 29.0625 152.5 C29.06317474 153.30901764 29.06384949 154.11803528 29.06454468 154.9515686 C29.04906692 166.61094546 28.71967674 177.77538199 25.8125 189.125 C25.63557617 189.82496094 25.45865234 190.52492187 25.27636719 191.24609375 C21.63680187 205.3517666 16.46077114 218.65930008 9.35229492 231.37939453 C7.43842158 234.55708204 7.43842158 234.55708204 6.8125 238.125 C9.04157395 238.60459778 11.27076297 239.0836608 13.5 239.5625 C15.36205078 239.96275391 15.36205078 239.96275391 17.26171875 240.37109375 C20.10862015 240.97555136 22.95705626 241.56264684 25.8125 242.125 C36.05673185 223.98272092 42.81971805 205.5955127 46.8125 185.125 C46.99941406 184.17512207 47.18632812 183.22524414 47.37890625 182.24658203 C49.05132649 172.74813098 49.21103978 163.36445372 49.1875 153.75 C49.18695618 152.91317688 49.18641235 152.07635376 49.18585205 151.21417236 C49.1450087 137.51269885 48.20366032 124.45316957 44.8125 111.125 C44.60351074 110.27921387 44.39452148 109.43342773 44.17919922 108.56201172 C32.15830845 61.24382371 0.43688922 21.74516392 -41.16650391 -3.0546875 C-58.99882426 -13.38573287 -78.03799731 -19.82673801 -98.1875 -23.875 C-99.34378906 -24.10960937 -100.50007812 -24.34421875 -101.69140625 -24.5859375 C-160.33026448 -34.92075543 -218.24665836 -12.38609841 -259.73046875 28.65136719 Z M-371.1875 5.125 C-378.25952378 13.43531588 -381.0616646 21.16250692 -381.87890625 31.88671875 C-382.2870536 34.84707866 -383.32143378 36.81107788 -385.1875 39.125 C-387.576661 40.3195805 -389.76307517 40.41857329 -392.39379883 40.66943359 C-398.96889899 41.33079237 -403.77795112 41.83354134 -408.1875 47.125 C-410.49301518 50.16408819 -410.60944607 53.3193307 -410.50390625 57.09765625 C-409.83436746 61.38766407 -407.41516819 64.15898348 -404.09480286 66.77168274 C-400.10500128 68.62889116 -396.7063071 68.52252007 -392.3581543 68.46557617 C-391.47960281 68.46601425 -390.60105133 68.46645233 -389.69587708 68.46690369 C-386.80092914 68.46481883 -383.90656513 68.44150201 -381.01171875 68.41796875 C-379.0010459 68.41237172 -376.99036896 68.40810213 -374.97969055 68.40510559 C-369.69421035 68.39366527 -364.40897846 68.36420494 -359.12359619 68.33099365 C-353.72761392 68.30027533 -348.33159143 68.28659648 -342.93554688 68.27148438 C-332.35275564 68.23933459 -321.77014849 68.18814793 -311.1875 68.125 C-310.64584702 67.02932205 -310.10419403 65.9336441 -309.54612732 64.80476379 C-308.82440502 63.35131208 -308.10256123 61.89792069 -307.38061523 60.44458008 C-307.02494225 59.72429878 -306.66926926 59.00401749 -306.3028183 58.26190948 C-303.61843235 52.86685312 -300.67388744 47.7761968 -297.25 42.8125 C-296.7456543 42.06540771 -296.24130859 41.31831543 -295.72167969 40.54858398 C-292.02728869 35.14877528 -288.0660449 30.09909608 -283.734375 25.19140625 C-281.88786332 23.15493628 -281.88786332 23.15493628 -282.1875 20.125 C-288.25406942 16.08062039 -293.43250431 15.76871554 -300.55078125 16.09765625 C-307.13608939 16.3641138 -307.13608939 16.3641138 -310.1875 14.125 C-311.609375 12.42578125 -311.609375 12.42578125 -312.9375 10.4375 C-318.63159899 2.55446346 -326.40775604 -4.0229069 -336.1875 -5.875 C-349.86764488 -6.86725783 -361.13499395 -4.81370409 -371.1875 5.125 Z M-72.9375 252 C-78.1920945 259.29804791 -79.70618691 265.96022769 -80.5 274.890625 C-81.32324891 278.7636369 -82.23371368 280.48391093 -85.1875 283.125 C-88.6484375 283.91015625 -88.6484375 283.91015625 -92.5625 284.1875 C-98.30956907 284.6078768 -101.64506995 285.5017914 -106.1875 289.125 C-109.31726397 293.46628551 -109.57620473 296.89097068 -108.75 302.01171875 C-107.88245834 305.27102457 -106.7308785 306.90769567 -104.1875 309.125 C-97.16054717 312.51556529 -90.80474814 312.55180064 -83.08959961 312.51318359 C-81.79269699 312.51844055 -80.49579437 312.52369751 -79.15959167 312.52911377 C-75.62243148 312.54272062 -72.08553554 312.53751679 -68.54837108 312.52797651 C-64.83607858 312.52034693 -61.12380773 312.5274345 -57.41151428 312.53213501 C-51.1801449 312.53758232 -44.94888243 312.53042724 -38.7175293 312.51611328 C-31.52492714 312.49978151 -24.33258007 312.50508312 -17.13998407 312.5215925 C-10.95035818 312.53522811 -4.76080884 312.53711713 1.42882723 312.52927649 C5.11948001 312.52461227 8.81001306 312.52394066 12.50065804 312.53388596 C16.6152559 312.5442007 20.72941726 312.52988448 24.84399414 312.51318359 C26.05925781 312.51925629 27.27452148 312.52532898 28.52661133 312.53158569 C36.00781111 312.47535847 41.42685577 312.07658728 47.25 307 C49.45575478 302.9414112 49.67426718 299.64129839 48.8125 295.125 C46.61932373 290.8198762 45.25743321 289.62412586 40.69140625 288.046875 C38.39988667 287.40310361 36.09311638 286.81081681 33.7734375 286.27734375 C30.12087811 284.85583317 29.37015742 283.66325493 27.8125 280.125 C27.34554094 278.53474498 26.92812059 276.92906531 26.5625 275.3125 C24.98256956 269.79920106 22.30097771 265.72409416 17.8125 262.125 C12.48956274 259.28610013 8.47143801 258.7715505 2.625 259.0625 C-6.03244945 259.43821572 -6.03244945 259.43821572 -9.1875 257.125 C-10.609375 255.42578125 -10.609375 255.42578125 -11.9375 253.4375 C-18.03117689 245.02242239 -25.85814869 239.16071157 -36.1875 237.125 C-52.13713325 235.68624442 -62.17376673 240.74700613 -72.9375 252 Z M-300.89575195 295.76513672 C-303.66704048 298.54454391 -306.43008454 301.33182555 -309.1875 304.125 C-303.94291414 310.49090304 -298.16652678 316.26070612 -292.3125 322.0625 C-291.32789081 323.04208237 -290.343514 324.02189837 -289.359375 325.00195312 C-286.97101797 327.37860252 -284.58034788 329.75287356 -282.1875 332.125 C-277.0177279 327.7933881 -272.14561955 323.26587266 -267.375 318.5 C-266.70791016 317.84515625 -266.04082031 317.1903125 -265.35351562 316.515625 C-264.71478516 315.87882812 -264.07605469 315.24203125 -263.41796875 314.5859375 C-262.84457764 314.01665527 -262.27118652 313.44737305 -261.68041992 312.86083984 C-260.12265527 311.04960409 -259.15997901 309.29842663 -258.1875 307.125 C-259.14269531 306.25359375 -260.09789062 305.3821875 -261.08203125 304.484375 C-268.47892331 297.68614191 -275.55087096 290.78231245 -282.2109375 283.2578125 C-282.86320312 282.55398438 -283.51546875 281.85015625 -284.1875 281.125 C-288.88946802 281.125 -297.48767933 292.36697505 -300.89575195 295.76513672 Z M-326.97265625 320.84765625 C-328.47290632 322.38907956 -329.97291243 323.93074037 -331.47265625 325.47265625 C-333.59965714 327.55069022 -335.74596255 329.49602663 -337.99609375 331.43359375 C-342.26688976 335.13595106 -346.23137382 339.09160573 -350.1875 343.125 C-354.70725312 347.73302955 -359.29682227 352.13517797 -364.1875 356.34765625 C-367.67721278 359.44886585 -370.9196662 362.79334132 -374.1875 366.125 C-378.70725312 370.73302955 -383.29682227 375.13517797 -388.1875 379.34765625 C-391.67721278 382.44886585 -394.9196662 385.79334132 -398.1875 389.125 C-402.16940231 393.18467384 -406.1570545 397.1522121 -410.47265625 400.859375 C-413.17629066 403.18943313 -415.5336386 405.46012803 -417.625 408.375 C-418.09808594 409.01953125 -418.57117188 409.6640625 -419.05859375 410.328125 C-422.37865119 415.61264549 -421.68426051 422.13548758 -421.1875 428.125 C-419.50351181 434.41459443 -415.4573431 438.50422345 -410.1875 442.125 C-404.24233444 445.24621192 -397.99631173 445.69203505 -391.56469727 443.98120117 C-384.14593088 441.30916526 -378.66878528 434.74771194 -373.5 429.0625 C-372.10329493 427.55048118 -370.70483382 426.04008274 -369.3046875 424.53125 C-368.6147168 423.78746094 -367.92474609 423.04367187 -367.21386719 422.27734375 C-363.77212827 418.62163649 -360.20694142 415.09268695 -356.61254883 411.58764648 C-353.88499182 408.90660525 -351.31354817 406.15205937 -348.81640625 403.25390625 C-344.5154446 398.28245024 -339.83854438 393.72525809 -335.1484375 389.125 C-331.87049366 385.88502463 -328.69614439 382.61802931 -325.6875 379.125 C-321.43717188 374.19037869 -316.79491662 369.68246611 -312.1484375 365.125 C-306.4134022 359.45639368 -300.97560513 353.62416973 -296.1875 347.125 C-300.15365417 343.13420662 -304.12302111 339.14664801 -308.09545898 335.16210938 C-309.44759477 333.80493134 -310.79883353 332.446859 -312.14916992 331.08789062 C-314.08539891 329.13959127 -316.02478546 327.19448531 -317.96484375 325.25 C-318.57214828 324.63753418 -319.17945282 324.02506836 -319.80516052 323.39404297 C-321.24708408 321.95192511 -322.71466559 320.53553404 -324.1875 319.125 C-325.48103339 319.00926704 -325.48103339 319.00926704 -326.97265625 320.84765625 Z " transform="translate(442.1875,46.875)"/>
    <path class="svgPrimaryIconPath" d="M0 0 C2.4375 1.5 2.4375 1.5 4 4 C4.89776839 9.00548223 4.76303108 12.72828153 2.125 17.125 C-2.27686274 19.76611764 -5.99147509 20.01979818 -11 19 C-14.41421647 16.63095184 -15.64346607 15.02503506 -17 11.125 C-17 6.9569923 -16.15607248 4.57099504 -14 1 C-8.80675031 -2.29571615 -5.60979182 -2.43443796 0 0 Z " transform="translate(212,85)"/>
    <path class="svgPrimaryIconPath" d="M0 0 C3.125 1.875 3.125 1.875 5 5 C5.98876625 10.02622846 5.7769173 13.70513784 3.125 18.125 C-1.29486216 20.7769173 -4.97377154 20.98876625 -10 20 C-13.125 18.125 -13.125 18.125 -15 15 C-15.98876625 9.97377154 -15.7769173 6.29486216 -13.125 1.875 C-8.70513784 -0.7769173 -5.02622846 -0.98876625 0 0 Z " transform="translate(367,190)"/>
    <path class="svgPrimaryIconPath" d="M0 0 C3.125 1.875 3.125 1.875 5 5 C5.98876625 10.02622846 5.7769173 13.70513784 3.125 18.125 C-1.29486216 20.7769173 -4.97377154 20.98876625 -10 20 C-13.125 18.125 -13.125 18.125 -15 15 C-15.98876625 9.97377154 -15.7769173 6.29486216 -13.125 1.875 C-8.70513784 -0.7769173 -5.02622846 -0.98876625 0 0 Z " transform="translate(317,190)"/>
    <path class="svgPrimaryIconPath" d="M0 0 C3.125 1.875 3.125 1.875 5 5 C5.98876625 10.02622846 5.7769173 13.70513784 3.125 18.125 C-1.29486216 20.7769173 -4.97377154 20.98876625 -10 20 C-13.125 18.125 -13.125 18.125 -15 15 C-15.98876625 9.97377154 -15.7769173 6.29486216 -13.125 1.875 C-8.70513784 -0.7769173 -5.02622846 -0.98876625 0 0 Z " transform="translate(267,190)"/>`,

    GarbargeBin: `
    <path class="svgOnErrorIconPath" d="M0 0 C1.17033279 -0.00852997 2.34066559 -0.01705994 3.54646301 -0.02584839 C4.81671326 -0.02494202 6.0869635 -0.02403564 7.39570618 -0.02310181 C8.75804002 -0.02909167 10.12037049 -0.03589827 11.48269653 -0.04345703 C15.17306303 -0.0610817 18.8633367 -0.06581103 22.55374122 -0.0670886 C24.86382806 -0.06851323 27.17389153 -0.07278881 29.48397255 -0.07808304 C37.55612808 -0.09657451 45.62821767 -0.10475512 53.70039368 -0.10317993 C61.20305619 -0.10198008 68.70543031 -0.12305372 76.20801991 -0.15466726 C82.66602249 -0.18090111 89.12393133 -0.1915442 95.58198673 -0.19026911 C99.43158892 -0.18976139 103.28093491 -0.19533835 107.13048363 -0.21662521 C110.75612389 -0.23612702 114.38126678 -0.23605173 118.00692558 -0.22159195 C119.95497449 -0.21853581 121.90302409 -0.23509807 123.85099792 -0.25247192 C136.72088594 -0.16131836 146.37164754 3.77405702 156.03755188 12.26742554 C163.48556861 20.1852615 169.3472185 30.22976318 169.23286438 41.32211304 C169.22641907 42.43070679 169.21997375 43.53930054 169.21333313 44.68148804 C169.19657532 45.82359741 169.1798175 46.96570679 169.16255188 48.14242554 C169.15352844 49.30773804 169.144505 50.47305054 169.13520813 51.67367554 C169.1117262 54.53847131 169.07888329 57.40284088 169.03755188 60.26742554 C170.07801163 60.25854309 171.11847137 60.24966064 172.19046021 60.24050903 C182.0320726 60.15915582 191.87361609 60.09933235 201.71548939 60.06017685 C206.77440298 60.03936932 211.83304347 60.01117747 216.89179993 59.96566772 C221.78070418 59.92196504 226.66934699 59.89823712 231.55843163 59.88791656 C233.41661884 59.88056881 235.27479297 59.86622111 237.13286781 59.84450531 C252.67528468 59.670206 263.94648018 61.64307793 276.03755188 72.26742554 C286.36235241 83.24351218 289.66401382 94.75088722 289.34614563 109.49008179 C288.76589179 121.74282782 283.08667289 131.77327473 274.22505188 140.07992554 C269.96907739 143.5946442 263.75039152 148.26742554 258.03755188 148.26742554 C258.04840675 148.98517001 258.05926162 149.70291449 258.07044542 150.4424088 C258.13466413 158.03550681 257.74429915 165.50471832 257.10191345 173.06790161 C257.00123577 174.30009847 256.9005581 175.53229533 256.79682958 176.80183148 C256.51920809 180.18741933 256.23722214 183.57258987 255.95329523 186.95765114 C255.64702601 190.62210791 255.3464861 194.28703536 255.04519653 197.9519043 C254.45508718 205.11886647 253.85971574 212.28538206 253.26248647 219.45175406 C252.56591584 227.81226273 251.87438844 236.1731863 251.18299334 244.53412428 C249.94821253 259.46379794 248.70854805 274.39306212 247.46626282 289.32211304 C246.26333895 303.77816125 245.06436162 318.23452994 243.86958313 332.69125366 C242.56622134 348.46175639 241.26074416 364.23208124 239.95155275 380.00210118 C239.81165347 381.68729603 239.67175473 383.37249092 239.53185654 385.05768585 C239.4630352 385.88665591 239.39421387 386.71562596 239.32330704 387.56971632 C238.84071577 393.38417106 238.35955265 399.19874296 237.87891006 405.01335907 C237.29205793 412.11207661 236.702711 419.21058212 236.11030985 426.30883881 C235.80866444 429.92384526 235.50803296 433.53892761 235.21034813 437.15426254 C230.89860339 489.47986468 230.89860339 489.47986468 213.33442688 504.50961304 C204.72102285 511.10150388 195.83629416 512.56766967 185.24732971 512.53485107 C184.17105214 512.53938219 183.09477457 512.5439133 181.98588252 512.54858172 C178.38489774 512.56122661 174.78406419 512.55960526 171.18305969 512.55795288 C168.59892075 512.56393808 166.0147836 512.5707436 163.4306488 512.57830811 C157.14266705 512.5948938 150.8547228 512.60041656 144.56672099 512.60153286 C139.45303696 512.60248454 134.33936525 512.60660082 129.22568512 512.61293411 C114.71365069 512.6305403 100.2016458 512.63977402 85.68960062 512.63827316 C84.51702204 512.6381533 84.51702204 512.6381533 83.320755 512.63803101 C82.14673744 512.63790836 82.14673744 512.63790836 80.94900236 512.63778324 C68.26950261 512.63697064 55.59012174 512.65610349 42.91065636 512.68430774 C29.87794016 512.71306798 16.84528187 512.72684629 3.81253314 512.72512019 C-3.49891256 512.72445734 -10.81023366 512.7299031 -18.1216507 512.75147629 C-24.99996377 512.77164214 -31.87801004 512.77098232 -38.75633621 512.75644302 C-41.27699035 512.75435391 -43.79766094 512.75906183 -46.3182869 512.77116394 C-49.7672623 512.7866472 -53.2153348 512.77728676 -56.66429138 512.76190186 C-57.65468564 512.77218898 -58.64507989 512.78247611 -59.6654861 512.79307497 C-70.47260597 512.68701504 -79.49996295 508.8797476 -87.96244812 502.26742554 C-88.57862 501.78918335 -89.19479187 501.31094116 -89.82963562 500.81820679 C-101.33169093 490.67083799 -103.91240648 475.27741249 -105.06889343 460.80062866 C-105.16402348 459.67255893 -105.25915352 458.54448919 -105.35716629 457.38223553 C-105.6741928 453.60484829 -105.98234978 449.8267905 -106.29057312 446.04867554 C-106.51740854 443.31609448 -106.74613617 440.58367256 -106.97477722 437.85124207 C-107.53312698 431.16491361 -108.0848867 424.47805691 -108.63443947 417.79100031 C-109.27981832 409.94078951 -109.9314599 402.09110248 -110.58350229 394.2414428 C-111.4855005 383.38157909 -112.38586636 372.52158183 -113.28245544 361.66127014 C-115.21550221 338.24901441 -117.16681593 314.83834013 -119.12904191 291.42851245 C-120.18481366 278.83097089 -121.2366415 266.23309977 -122.28797531 253.63518715 C-123.0776368 244.17388118 -123.86872371 234.71269901 -124.66325378 225.25180054 C-125.34350518 217.1510153 -126.02018286 209.04994065 -126.6924572 200.94848937 C-127.03745418 196.79222763 -127.38406072 192.63611688 -127.73504639 188.48035622 C-128.058336 184.65207917 -128.37695568 180.82344183 -128.69201803 176.99447918 C-128.86049104 174.96137184 -129.03382216 172.92866884 -129.20737076 170.89598846 C-129.82413796 163.33288057 -130.10075233 155.85520836 -129.96244812 148.26742554 C-130.55058289 148.11966675 -131.13871765 147.97190796 -131.74467468 147.81967163 C-142.20104712 145.0604189 -150.3534606 137.32236017 -155.96244812 128.26742554 C-161.64807446 116.49748564 -163.62729701 101.90875101 -159.46244812 89.26742554 C-153.36699473 75.49383963 -143.10635005 66.72040115 -129.36647034 61.23010254 C-125.34830061 60.0937411 -121.61456733 60.00191306 -117.4785614 60.04037476 C-116.64863174 60.0400827 -115.81870209 60.03979065 -114.96362305 60.03948975 C-112.23656036 60.04087651 -109.50977523 60.05640683 -106.78276062 60.07211304 C-104.88561655 60.07584549 -102.98847054 60.07869137 -101.09132385 60.08068848 C-96.1100579 60.08830663 -91.12890949 60.10793949 -86.14768982 60.13009644 C-81.05991709 60.15059405 -75.97212528 60.15969856 -70.88432312 60.16976929 C-60.91031328 60.19118711 -50.9363905 60.22530109 -40.96244812 60.26742554 C-40.99386902 59.21784668 -40.99386902 59.21784668 -41.02592468 58.14706421 C-41.11007746 54.9165029 -41.16141883 51.68617328 -41.21244812 48.45492554 C-41.24596375 47.35471069 -41.27947937 46.25449585 -41.31401062 45.12094116 C-41.46429668 32.38419757 -37.34055179 22.80215237 -28.96244812 13.26742554 C-21.05913175 5.83306686 -11.0577088 0.03660117 0 0 Z M-5.77494812 34.70492554 C-12.69179034 42.80751214 -10.96244812 48.99629855 -10.96244812 60.26742554 C38.53755188 60.26742554 88.03755188 60.26742554 139.03755188 60.26742554 C139.95279435 46.84411302 139.95279435 46.84411302 134.60005188 35.45492554 C129.45424849 31.06216654 125.55570906 30.1464621 118.92771912 30.13371277 C117.92126343 30.12944778 116.91480774 30.1251828 115.87785339 30.12078857 C114.78473846 30.12124176 113.69162354 30.12169495 112.56538391 30.12216187 C111.40546936 30.11880325 110.24555481 30.11544464 109.05049133 30.11198425 C105.21543813 30.10248394 101.38042862 30.10053163 97.54536438 30.09945679 C95.55285853 30.09705586 93.56035266 30.09465319 91.56784713 30.09199637 C85.30367647 30.08386221 79.03952018 30.08141119 72.77534485 30.0821228 C66.32414602 30.08272339 59.87303085 30.07217295 53.42185318 30.05637914 C47.87348957 30.04328212 42.32515323 30.03793981 36.77677429 30.03857821 C33.46726415 30.03883256 30.15784497 30.03509017 26.84834671 30.02540016 C23.15499688 30.01559842 19.46186224 30.01847919 15.76850891 30.02450562 C14.67944244 30.01888611 13.59037598 30.0132666 12.4683075 30.00747681 C2.6087098 30.011368 2.6087098 30.011368 -5.77494812 34.70492554 Z M-125.77494812 94.70492554 C-129.71323675 99.31834936 -130.40790692 101.85760966 -130.27885437 107.75961304 C-129.81202795 111.45964467 -128.43681232 113.52556251 -125.96244812 116.26742554 C-120.86609266 120.05702319 -115.94975186 120.39204204 -109.74450874 120.39605999 C-107.85501761 120.40089666 -107.85501761 120.40089666 -105.92735493 120.40583104 C-104.53199893 120.40435995 -103.13664303 120.40279223 -101.74128723 120.40113831 C-100.25703208 120.40300658 -98.77277743 120.40530735 -97.28852355 120.40800363 C-93.20876241 120.41412591 -89.12902174 120.41398753 -85.04925704 120.41280925 C-80.64971204 120.41260536 -76.25017364 120.41812293 -71.85063171 120.42286682 C-63.23090333 120.43117615 -54.61118178 120.43392178 -45.99144973 120.4344792 C-38.98600186 120.4349542 -31.98055625 120.43700815 -24.9751091 120.44017982 C-5.11859811 120.44898696 14.73790746 120.45359908 34.59442042 120.45284935 C35.66507275 120.45280939 36.73572507 120.45276944 37.83882141 120.45272827 C39.44675787 120.45266695 39.44675787 120.45266695 41.08717789 120.45260439 C58.46416348 120.45219784 75.84112741 120.46176945 93.21810673 120.47586664 C111.05554611 120.49022335 128.89297492 120.49713722 146.73042023 120.49627286 C156.74686798 120.49594066 166.76329302 120.49869786 176.77973557 120.50945091 C185.30707815 120.51854661 193.83438773 120.5207388 202.36173306 120.51394149 C206.71293066 120.51067166 211.06406489 120.5106363 215.4152565 120.51929474 C219.39880589 120.52714014 223.38224146 120.52574842 227.365788 120.51701061 C228.80653468 120.5154713 230.24728977 120.51730797 231.68802653 120.52287068 C243.6034487 120.95860711 243.6034487 120.95860711 253.85005188 115.82992554 C257.78834051 111.21650171 258.48301068 108.67724141 258.35395813 102.77523804 C257.88713171 99.07520641 256.51191608 97.00928857 254.03755188 94.26742554 C248.94119642 90.47782789 244.02485562 90.14280903 237.8196125 90.13879108 C236.55995175 90.13556664 235.30029099 90.13234219 234.00245869 90.12902004 C232.60710269 90.13049113 231.21174679 90.13205884 229.81639099 90.13371277 C228.33213584 90.13184449 226.84788119 90.12954372 225.36362731 90.12684745 C221.28386617 90.12072516 217.2041255 90.12086354 213.1243608 90.12204182 C208.7248158 90.12224572 204.3252774 90.11672814 199.92573547 90.11198425 C191.30600709 90.10367493 182.68628554 90.10092929 174.06655349 90.10037187 C167.06110562 90.09989687 160.05566001 90.09784293 153.05021286 90.09467125 C133.19370187 90.08586412 113.33719629 90.081252 93.48068334 90.08200172 C92.41003101 90.08204168 91.33937869 90.08208164 90.23628235 90.0821228 C88.62834589 90.08218412 88.62834589 90.08218412 86.98792587 90.08224668 C69.61094028 90.08265323 52.23397635 90.07308163 34.85699703 90.05898444 C17.01955765 90.04462772 -0.81787116 90.03771385 -18.65531647 90.03857821 C-28.67176422 90.03891041 -38.68818926 90.03615321 -48.70463181 90.02540016 C-57.23197439 90.01630446 -65.75928397 90.01411227 -74.2866293 90.02090959 C-78.6378269 90.02417942 -82.98896113 90.02421477 -87.34015274 90.01555634 C-91.32370213 90.00771094 -95.3071377 90.00910265 -99.29068424 90.01784047 C-100.73143092 90.01937978 -102.17218601 90.0175431 -103.61292277 90.01198039 C-115.52834494 89.57624397 -115.52834494 89.57624397 -125.77494812 94.70492554 Z M-98.96244812 150.26742554 C-98.16391518 167.49421445 -98.16391518 167.49421445 -96.94451904 184.67684937 C-96.84707049 185.86576656 -96.74962194 187.05468376 -96.64922041 188.27962875 C-96.38433497 191.50236483 -96.11626129 194.72481495 -95.84666884 197.94716001 C-95.55427085 201.45196458 -95.26617814 204.95712374 -94.97747803 208.4622345 C-94.4139213 215.29600025 -93.84642442 222.12943302 -93.27739603 228.96274513 C-92.81470461 234.51980889 -92.35341175 240.07698713 -91.89307976 245.63424683 C-91.82718402 246.42972754 -91.76128829 247.22520825 -91.69339572 248.04479444 C-91.5594786 249.66146054 -91.42556361 251.27812682 -91.29165071 252.89479327 C-90.04095591 267.99162802 -88.78563128 283.08807504 -87.52876984 298.18439746 C-86.38114515 311.97024626 -85.23892078 325.75653617 -84.09928841 339.54304779 C-82.92527927 353.74493311 -81.74788499 367.94653393 -80.5667457 382.1478281 C-80.43303616 383.7555951 -80.29933166 385.36336253 -80.16563225 386.97113037 C-80.09987001 387.76193424 -80.03410778 388.55273811 -79.96635275 389.36750573 C-79.50517136 394.91592137 -79.04616511 400.46451443 -78.58804512 406.01318359 C-78.02952414 412.77733776 -77.46774631 419.54121209 -76.90186269 426.30475444 C-76.61375517 429.74927968 -76.32706882 433.19390651 -76.04441071 436.63888359 C-75.73630453 440.38424731 -75.42251984 444.12909493 -75.10736084 447.87387085 C-74.97704841 449.48230976 -74.97704841 449.48230976 -74.8441034 451.12324238 C-74.44501308 464.65063451 -74.44501308 464.65063451 -69.89994812 476.89242554 C-63.33306978 482.20181653 -55.85560819 482.70805675 -47.67753601 482.64837646 C-46.18094625 482.65539642 -46.18094625 482.65539642 -44.65412235 482.6625582 C-41.33097872 482.67446671 -38.00825063 482.66506702 -34.68510437 482.65560913 C-32.29446676 482.65967666 -29.90383103 482.66501956 -27.51319885 482.67153931 C-21.70605845 482.68378025 -15.89904874 482.6820142 -10.0919044 482.67330138 C-5.37012323 482.66651176 -0.64837463 482.66561363 4.07341003 482.66887283 C4.74678026 482.66933253 5.42015049 482.66979223 6.11392587 482.67026586 C7.4820885 482.67122509 8.85025111 482.67219773 10.21841371 482.67318363 C23.03191244 482.68172754 35.84534667 482.67191912 48.65883482 482.65578254 C59.6409004 482.64238025 70.62287083 482.64470862 81.60493469 482.65853882 C94.37422151 482.67461233 107.14345186 482.68090366 119.91274738 482.67170203 C121.27572949 482.67074643 122.6387116 482.66980332 124.00169373 482.66887283 C124.67221533 482.66841001 125.34273694 482.66794718 126.03357738 482.66747033 C130.74681995 482.66488575 135.46002655 482.66923993 140.17326355 482.67631149 C146.52299893 482.68498841 152.87255493 482.67894571 159.22227097 482.66162872 C161.55025307 482.6576678 163.87825031 482.65879115 166.20622635 482.66541672 C169.38856679 482.67363763 172.57033556 482.6633035 175.75263977 482.64837646 C176.6696765 482.65506863 177.58671324 482.6617608 178.53153896 482.66865575 C185.77688324 482.6029235 192.23597407 481.532531 197.97505188 476.89242554 C203.38088187 469.40565384 202.50624878 456.21468548 203.22715759 447.29286194 C203.38285408 445.43481822 203.38285408 445.43481822 203.54169595 443.53923827 C203.82552393 440.14103589 204.10529457 436.74254593 204.38325787 433.34386194 C204.6852899 429.66332706 204.99265418 425.98323678 205.29931641 422.30308533 C205.89778672 415.11086264 206.49136521 407.9182444 207.08320118 400.72547307 C207.77319517 392.34168779 208.4678482 383.95829045 209.16261582 375.57489965 C210.40212505 360.61619868 211.63707023 345.65712436 212.86958313 330.69784546 C214.06463153 316.19329383 215.26346657 301.68906135 216.46626282 287.18515015 C217.77778527 271.37010391 219.08723653 255.55488879 220.39306867 239.7393716 C220.53233779 238.05265058 220.67160782 236.36592963 220.81087875 234.67920876 C220.87939153 233.84940799 220.94790432 233.01960723 221.01849324 232.16466099 C221.50079938 226.32470934 221.98453286 220.48487692 222.46878433 214.64508629 C223.05874669 207.52976794 223.64630159 200.4142555 224.23082305 193.29848804 C224.52893619 189.67001598 224.82808241 186.04163723 225.13008308 182.41348648 C225.45760127 178.4783055 225.78000845 174.54271526 226.10191345 170.60707092 C226.19782292 169.46417483 226.29373239 168.32127873 226.3925482 167.14374942 C226.4783997 166.08385265 226.56425119 165.02395588 226.65270424 163.93194103 C226.72756416 163.02462142 226.80242408 162.11730181 226.87955248 161.18248767 C227.07648665 157.54908556 227.03755188 153.90616074 227.03755188 150.26742554 C119.45755188 150.26742554 11.87755188 150.26742554 -98.96244812 150.26742554 Z " fill="#000000" transform="translate(191.9624481201172,-0.267425537109375)"/>
    <path class="svgOnErrorIconPath" d="M0 0 C4.57848169 2.16875448 6.91859935 4.41855628 9 9 C9.40874074 12.45887383 9.33942563 15.88147989 9.26583862 19.35961914 C9.25427416 20.37788568 9.24270969 21.39615221 9.23079479 22.44527531 C9.06222372 33.39699182 8.43875078 44.31724186 7.74658203 55.24609375 C7.61131817 57.46466607 7.47665236 59.68327492 7.3425293 61.9019165 C6.98122972 67.84753531 6.61113501 73.79257427 6.23885584 79.7375145 C5.9278262 84.71842053 5.62135362 89.69960282 5.3148793 94.6807909 C4.55127513 107.09141352 3.77929691 119.50150063 3.00313316 131.91134322 C2.37238278 141.99970681 1.7495605 152.08853527 1.13232422 162.17773438 C0.41248752 173.94398477 -0.31263372 185.70989478 -1.04536164 197.47535038 C-1.43214046 203.68624051 -1.8167689 209.89724368 -2.19579697 216.10861206 C-2.55156278 221.93361787 -2.91492735 227.75810084 -3.28416443 233.58226776 C-3.41827495 235.7174288 -3.54973223 237.85275841 -3.67833328 239.98825836 C-3.85433632 242.90373037 -4.03995425 245.81843761 -4.22799683 248.7331543 C-4.30096822 249.9980678 -4.30096822 249.9980678 -4.37541378 251.28853512 C-4.78987198 257.4720639 -5.24536458 262.97542067 -9.4375 267.8125 C-14.509547 272.14229622 -17.54298274 272.43423039 -24.046875 272.31640625 C-28.97090343 271.78883177 -31.57378104 269.74126524 -34.63572884 266.00294495 C-36.65374875 261.56101077 -36.36782162 257.46067586 -36.26583862 252.64038086 C-36.25427416 251.62211432 -36.24270969 250.60384779 -36.23079479 249.55472469 C-36.06222372 238.60300818 -35.43875078 227.68275814 -34.74658203 216.75390625 C-34.61131817 214.53533393 -34.47665236 212.31672508 -34.3425293 210.0980835 C-33.98122972 204.15246469 -33.61113501 198.20742573 -33.23885584 192.2624855 C-32.9278262 187.28157947 -32.62135362 182.30039718 -32.3148793 177.3192091 C-31.55127513 164.90858648 -30.77929691 152.49849937 -30.00313316 140.08865678 C-29.37238278 130.00029319 -28.7495605 119.91146473 -28.13232422 109.82226562 C-27.41248752 98.05601523 -26.68736628 86.29010522 -25.95463836 74.52464962 C-25.56785954 68.31375949 -25.1832311 62.10275632 -24.80420303 55.89138794 C-24.44843722 50.06638213 -24.08507265 44.24189916 -23.71583557 38.41773224 C-23.58172505 36.2825712 -23.45026777 34.14724159 -23.32166672 32.01174164 C-23.14566368 29.09626963 -22.96004575 26.18156239 -22.77200317 23.2668457 C-22.72335558 22.42357003 -22.67470799 21.58029436 -22.62458622 20.71146488 C-22.21012802 14.5279361 -21.75463542 9.02457933 -17.5625 4.1875 C-11.82360961 -0.71155278 -7.34932676 -0.78742787 0 0 Z " transform="translate(352,180)"/>
    <path class="svgOnErrorIconPath" d="M0 0 C1.010625 -0.00773438 2.02125 -0.01546875 3.0625 -0.0234375 C7.847388 0.62557656 10.3112343 2.49491049 13.25 6.25 C16.28563463 11.67077613 16.28234028 17.31789 16.65174866 23.40133667 C16.70977282 24.31226361 16.76779697 25.22319056 16.82757944 26.16172135 C17.02122756 29.21552716 17.20995599 32.26961678 17.39868164 35.32373047 C17.53648388 37.51374003 17.67456764 39.70373189 17.81291199 41.89370728 C18.18812479 47.84910271 18.55885285 53.80476923 18.92840123 59.76051855 C19.15998136 63.48937149 19.39252981 67.21816274 19.62542534 70.94693375 C20.397405 83.30696891 21.16648994 95.66718009 21.93187708 108.02762507 C21.97312962 108.69381641 22.01438215 109.36000776 22.05688477 110.04638672 C22.09818787 110.71340501 22.13949098 111.3804233 22.18204569 112.06765427 C22.84876745 122.83186077 23.52247281 133.59561706 24.19941122 144.35918544 C24.89643218 155.44341194 25.58790881 166.52797292 26.27420896 177.61286843 C26.65877186 183.82271089 27.04548306 190.03240002 27.43782234 196.24175644 C27.80779657 202.10021082 28.17075198 207.9590613 28.52867317 213.81826401 C28.66004125 215.95023736 28.793756 218.08206787 28.93020248 220.21372223 C29.62839543 231.14441587 30.14271222 242.06366289 30.26683044 253.0173645 C30.28720023 253.98286378 30.30757002 254.94836305 30.32855707 255.94311988 C30.34500431 260.9140536 30.28410302 264.36505036 27 268.375 C23.19231086 271.98742303 20.09638332 272.69185859 15 272.875 C9.90361668 272.69185859 6.80768914 271.98742303 3 268.375 C-1.27294061 262.62863159 -1.23312779 256.24254521 -1.65174866 249.34866333 C-1.70977282 248.43773639 -1.76779697 247.52680944 -1.82757944 246.58827865 C-2.02122756 243.53447284 -2.20995599 240.48038322 -2.39868164 237.42626953 C-2.53648388 235.23625997 -2.67456764 233.04626811 -2.81291199 230.85629272 C-3.18812479 224.90089729 -3.55885285 218.94523077 -3.92840123 212.98948145 C-4.15998136 209.26062851 -4.39252981 205.53183726 -4.62542534 201.80306625 C-5.397405 189.44303109 -6.16648994 177.08281991 -6.93187708 164.72237493 C-6.97312962 164.05618359 -7.01438215 163.38999224 -7.05688477 162.70361328 C-7.09818787 162.03659499 -7.13949098 161.3695767 -7.18204569 160.68234573 C-7.84876745 149.91813923 -8.52247281 139.15438294 -9.19941122 128.39081456 C-9.89643218 117.30658806 -10.58790881 106.22202708 -11.27420896 95.13713157 C-11.65877186 88.92728911 -12.04548306 82.71759998 -12.43782234 76.50824356 C-12.80779657 70.64978918 -13.17075198 64.7909387 -13.52867317 58.93173599 C-13.66004125 56.79976264 -13.793756 54.66793213 -13.93020248 52.53627777 C-14.6268728 41.629422 -15.15630183 30.72394486 -15.32933044 19.7951355 C-15.35807914 18.83801513 -15.38682783 17.88089476 -15.4164477 16.89477074 C-15.45688211 11.0428651 -14.8609227 7.84669033 -11 3.375 C-7.33713369 0.51941014 -4.60236472 -0.03522218 0 0 Z " transform="translate(166,179.625)"/>
    <path class="svgOnErrorIconPath" d="M0 0 C4.58282699 2.17081278 6.9024962 4.42363589 9 9 C9.44242745 12.40094562 9.40891275 15.77809549 9.38768005 19.20372009 C9.39306559 20.24098112 9.39845113 21.27824215 9.40399987 22.34693533 C9.41832398 25.82768318 9.41116457 29.30805312 9.40405273 32.78881836 C9.40975395 35.28225511 9.41671724 37.77568926 9.42485046 40.26911926 C9.4409568 46.34184135 9.44287696 52.41441458 9.43763756 58.48714345 C9.43359602 63.42310125 9.43503922 68.35902848 9.44038582 73.29498482 C9.44113424 73.99751679 9.44188266 74.70004875 9.44265376 75.42386957 C9.44418524 76.85106552 9.44572359 78.27826146 9.44726873 79.7054574 C9.46099646 93.08920649 9.45555417 106.47289712 9.44408352 119.85664488 C9.43415074 132.09993286 9.44709203 144.34306973 9.47101771 156.5863344 C9.49540203 169.15905537 9.50501824 181.73170595 9.49836498 194.30445009 C9.49487128 201.36257195 9.49711474 208.42057758 9.51461601 215.47868156 C9.53086691 222.11481692 9.52616675 228.75071029 9.50731087 235.38685417 C9.50361571 237.8241368 9.50676027 240.26144068 9.51719666 242.69870377 C9.53034419 246.0225706 9.51891337 249.34547142 9.50120544 252.66929626 C9.51081045 253.63670948 9.52041546 254.6041227 9.53031152 255.60085148 C9.46683041 261.3811572 8.79736705 264.57052663 5 269 C-0.22259857 273.05630398 -5.65340142 272.77397544 -12 272 C-16.58282699 269.82918722 -18.9024962 267.57636411 -21 263 C-21.44242745 259.59905438 -21.40891275 256.22190451 -21.38768005 252.79627991 C-21.39306559 251.75901888 -21.39845113 250.72175785 -21.40399987 249.65306467 C-21.41832398 246.17231682 -21.41116457 242.69194688 -21.40405273 239.21118164 C-21.40975395 236.71774489 -21.41671724 234.22431074 -21.42485046 231.73088074 C-21.4409568 225.65815865 -21.44287696 219.58558542 -21.43763756 213.51285655 C-21.43359602 208.57689875 -21.43503922 203.64097152 -21.44038582 198.70501518 C-21.44113424 198.00248321 -21.44188266 197.29995125 -21.44265376 196.57613043 C-21.44418524 195.14893448 -21.44572359 193.72173854 -21.44726873 192.2945426 C-21.46099646 178.91079351 -21.45555417 165.52710288 -21.44408352 152.14335512 C-21.43415074 139.90006714 -21.44709203 127.65693027 -21.47101771 115.4136656 C-21.49540203 102.84094463 -21.50501824 90.26829405 -21.49836498 77.69554991 C-21.49487128 70.63742805 -21.49711474 63.57942242 -21.51461601 56.52131844 C-21.53086691 49.88518308 -21.52616675 43.24928971 -21.50731087 36.61314583 C-21.50361571 34.1758632 -21.50676027 31.73855932 -21.51719666 29.30129623 C-21.53034419 25.9774294 -21.51891337 22.65452858 -21.50120544 19.33070374 C-21.51081045 18.36329052 -21.52041546 17.3958773 -21.53031152 16.39914852 C-21.46683041 10.6188428 -20.79736705 7.42947337 -17 3 C-11.77740143 -1.05630398 -6.34659858 -0.77397544 0 0 Z " transform="translate(262,180)"/>
    `,
};

// Tabs in the "Trends Over Time" page
export const TrendsOverTimeTabs = {
    ByFood: "ByFood",
    ByMicroorganism: "ByMicroorganism"
}

// Tabs in the "Overview" page
export const OverviewTabs = {
    ByMicroorganism: "ByMicroorganism",
    ByFood: "ByFood",
    ByOrg: "ByOrg"
}

// All tabs on the app
export const Tabs = {};
Tabs[Pages.TrendsOverTime] = TrendsOverTimeTabs;
Tabs[Pages.Overview] = OverviewTabs;

// Inputs available
export const Inputs = {
    DataType: "DataType",
    FoodGroup: "FoodGroup",
    Food: "Food",
    MicroOrganism: "Microorganism",
    SurveyType: "SurveyType",
    NumberView: "NumberView",
    Year: "Year",
    TimeGroup: "TimeGroup"
};

// Further groups the data for each tab apart from the grouping based on the tabs inputs
export const GroupNames = {
    SampleCode: "Sample Code"
}

// order for the filter inputs for each tab
export const FilterOrder = {};
FilterOrder[Pages.TrendsOverTime] = {};
FilterOrder[Pages.Overview] = {};
FilterOrder[Pages.TrendsOverTime][TrendsOverTimeTabs.ByMicroorganism] = [Inputs.DataType, Inputs.SurveyType, Inputs.MicroOrganism, Inputs.FoodGroup, Inputs.Food];
FilterOrder[Pages.TrendsOverTime][TrendsOverTimeTabs.ByFood] = [Inputs.DataType, Inputs.SurveyType, Inputs.FoodGroup, Inputs.Food, Inputs.MicroOrganism];
FilterOrder[Pages.Overview][OverviewTabs.ByMicroorganism] = [Inputs.MicroOrganism, Inputs.SurveyType];
FilterOrder[Pages.Overview][OverviewTabs.ByFood] = [Inputs.FoodGroup, Inputs.Food, Inputs.SurveyType];
FilterOrder[Pages.Overview][OverviewTabs.ByOrg] = [Inputs.SurveyType];

// indices for the order of the filter inputs in each tab
export const FilterOrderInds = {};
for (const page in FilterOrder) {
    const pageInputOrders = FilterOrder[page];
    FilterOrderInds[page] = {};

    for (const tab in pageInputOrders) {
        const tabInputOrder = pageInputOrders[tab];
        const tabOrderInds = {};
        tabInputOrder.forEach((input, ind) => {tabOrderInds[input] = ind});
        FilterOrderInds[page][tab] = tabOrderInds;
    }
}

// available inputs for each tab
export const TabInputs = {};
TabInputs[Pages.TrendsOverTime] = {};
TabInputs[Pages.Overview] = {};
TabInputs[Pages.TrendsOverTime][TrendsOverTimeTabs.ByMicroorganism] = new Set(FilterOrder[Pages.TrendsOverTime][TrendsOverTimeTabs.ByMicroorganism].concat([Inputs.Year]));
TabInputs[Pages.TrendsOverTime][TrendsOverTimeTabs.ByFood] = new Set(FilterOrder[Pages.TrendsOverTime][TrendsOverTimeTabs.ByFood].concat([Inputs.Year]));
TabInputs[Pages.Overview][OverviewTabs.ByMicroorganism] = new Set(FilterOrder[Pages.Overview][OverviewTabs.ByMicroorganism].concat([Inputs.Year]));
TabInputs[Pages.Overview][OverviewTabs.ByFood] = new Set(FilterOrder[Pages.Overview][OverviewTabs.ByFood].concat([Inputs.Year]));
TabInputs[Pages.Overview][OverviewTabs.ByOrg] = new Set(FilterOrder[Pages.Overview][OverviewTabs.ByOrg].concat([Inputs.Year]));

// Default selected pages and tabs
export const DefaultPage = Pages.Overview;
export const DefaultTrendsOverTimeSection = TrendsOverTimeTabs.ByMicroorganism;
export const DefaultOverviewSection = OverviewTabs.ByMicroorganism;

export const DefaultTabs = {};
DefaultTabs[Pages.TrendsOverTime] = DefaultTrendsOverTimeSection;
DefaultTabs[Pages.Overview] = DefaultOverviewSection;

// Available Languages
export const Languages = {
    English: "en",
    French: "fr"
}

export const DefaultLanguage = Languages.English;

// Data types available for the "select Data Type" filter
export const MicroBioDataTypes = {
    "PresenceAbsence": "presenceAbsence",
    "Concentration": "concentration"
};

// Survey Types
export const SurveyTypes = {
    HC: "HC Surveys",
    PHAC: "PHAC FoodNet",
    CFIANMMP: "CFIA NMMP",
    CFIATargeted: "CFIA Targeted Surveys",
    CFIAOther: "CFIA Other Surveys",
};

export const HealthCanadaSurveyTypes = new Set([SurveyTypes.HC, SurveyTypes.PHAC]);
export const CFIASurveyTypes = new Set([SurveyTypes.CFIANMMP, SurveyTypes.CFIATargeted, SurveyTypes.CFIAOther]);

// Delimeter for joining each node in the Phylogentic tree
export const PhylogeneticDelim = "==>"
export const TablePhylogenticDelim = " > "


// Concentration keyword when the concentration is not available
export const ConcentrationNotApplicable = "Not Applicable";

// the timezones used for each type of data
// See the link below for all the available timezones in Moment.js
// https://gist.github.com/diogocapela/12c6617fc87607d11fd62d2a4f42b02a
export const DefaultDataTimeZone = "America/Toronto";
export const ModelTimeZone = "UTC";
export const TimeZone = {};
TimeZone[SurveyTypes.HC] = DefaultDataTimeZone;
TimeZone[SurveyTypes.PHAC] = DefaultDataTimeZone;
TimeZone[SurveyTypes.CFIANMMP] = DefaultDataTimeZone;
TimeZone[SurveyTypes.CFIATargeted] = DefaultDataTimeZone;
TimeZone[SurveyTypes.CFIAOther] = DefaultDataTimeZone;

// Columns in the Health Canada Data
// Note: Copy the exact column names from "CANLINE Micro -no... .csv" except for the Columns with 3 stars (***)
export const HCDataCols = {
    Agent: "Agent",
    Genus: "Genus",
    Species: "Species",
    Subspecies: "Subspecies/Genogroup",
    Genotype: "Genotype",
    Subgenotype: "Subgenotype",
    Serotype: "Serotype",
    OtherTyping: "Other Typing",
    FoodGroup: "Food Group",
    FoodName: "Food Name",
    ProductDescription: "Product Description",
    ProjectCode: "Project Code",
    SampleCode: "Sample Code",
    QualitativeResult: "Qualitative Result",
    QuantitativeOperator: "Quantitative Result Operator",
    QuantitativeResult: "Quantitative Result",
    QuantitativeUnit: "Quantitative Result Unit",
    IsolateCode: "Isolate Code",
    SampleDate: "Sample Collection Date",
    EColiTyped: "Ecoli Typed",
    EColiVirulent: "EColi Virulent",
    ProductNetQuantity: "Product Net Quantity",
    ProductNetQuantityUnit: "Product Net Quantity Unit",
    ProvinceTerritoryOfOrigin: "Province/Territory of Origin",
    CountryOfOrigin: "Country of Origin",
    BestBeforeDate: "Best Before Date",
    ProductionDate: "Production Date",
    IntendedUse: "Intended Use",
    MethodOfProduction: "Method of Production",
    PhysicoChemical: "Physico-chemical",
    SampleType: "Sample Type",
    SubSample: "Sub Sample",
    SampleComments: "Sample Comments",
    PackagingType: "Packaging Type",
    PackagingMaterial: "Packaging Material",
    PackagingCondition: "Packaging Condition",
    MoreSampleInfo1: "More Sample Info 1",
    MoreSampleInfo2: "More Sample Info 2",
    ReasonCollected: "Reason Collected",
    HumanIllnessFlag: "Human Illness Flag",
    SamplingLocationType: "Sampling Location Type",
    SamplingLocationCityName: "Sampling Location City Name",
    SamplingLocationProvince: "Sampling Location Province",
    SamplingLocationCountry: "Sampling Location Country",
    OtherIsolateIdentifiers: "Other Isolate Identifiers",
    IsolateCharacterization: "Isolate Characterization",
    IsolateSubtyping: "Isolate Subtyping",
    ResultComments: "Result Comments",
    QA: "Quality Assurance",
    LabName: "Lab Name",
    AnalysisCompletionDate: "Analysis Completion Date",
    AnalysisStartDate: "Analysis Start Date",
    TestMethodName: "Test Method Name",
    TestMethodCode: "Test Method Code",
    Instrumentation: "Instrumentation",
    MethodComments: "Method Comments",
    StateOfSample: "State of Sample",
    AnalyticalQuantity: "Analytical Quantity",
    AnalyticalQuantityUnit: "Analytical Quantity Unit",
    ProjectName: "Project Name",
    ProjectDescription: "Project Description",
    Organization: "Organization",
    ConcentrationValue: "Concentration Value",
    ConcentrationNumber: "Concentration Number",
    SurveyType: "Survey Type", // ***
    Microorganism: "Microorganism", // ***
}

// Columns in the CFIA data
export const CFIADataCols = {
    EColiCategory: "Ecoli CFIA Category",
}

// Order of the columns in the raw download CSV
export const DownloadDataColOrder = [
    HCDataCols.FoodName,
    HCDataCols.SampleCode,  
    HCDataCols.ProductDescription,
    HCDataCols.FoodGroup,
    HCDataCols.ProductNetQuantity,
    HCDataCols.ProductNetQuantityUnit,
    HCDataCols.ProvinceTerritoryOfOrigin,
    HCDataCols.CountryOfOrigin,
    HCDataCols.BestBeforeDate,
    HCDataCols.ProductionDate,
    HCDataCols.IntendedUse,
    HCDataCols.MethodOfProduction,
    HCDataCols.PhysicoChemical,
    HCDataCols.SampleType,
    HCDataCols.SubSample,
    HCDataCols.SampleComments,
    HCDataCols.PackagingType,
    HCDataCols.PackagingMaterial,
    HCDataCols.PackagingCondition,
    HCDataCols.MoreSampleInfo1,
    HCDataCols.MoreSampleInfo2,
    HCDataCols.SampleDate,
    HCDataCols.ReasonCollected,
    HCDataCols.HumanIllnessFlag,
    HCDataCols.SamplingLocationType,
    HCDataCols.SamplingLocationCityName,
    HCDataCols.SamplingLocationProvince,
    HCDataCols.SamplingLocationCountry,
    HCDataCols.QualitativeResult,
    HCDataCols.QuantitativeOperator,
    HCDataCols.QuantitativeResult,
    HCDataCols.QuantitativeUnit,
    HCDataCols.Agent,
    HCDataCols.Genus,
    HCDataCols.Species,
    HCDataCols.Subspecies,
    HCDataCols.Genotype,
    HCDataCols.Subgenotype,
    HCDataCols.Serotype,
    HCDataCols.OtherTyping,
    HCDataCols.IsolateCode,
    HCDataCols.OtherIsolateIdentifiers,
    HCDataCols.IsolateCharacterization,
    HCDataCols.IsolateSubtyping,
    HCDataCols.ResultComments,
    HCDataCols.QA,
    HCDataCols.LabName,
    HCDataCols.AnalysisCompletionDate,
    HCDataCols.AnalysisStartDate,
    HCDataCols.TestMethodName,
    HCDataCols.TestMethodCode,
    HCDataCols.Instrumentation,
    HCDataCols.MethodComments,
    HCDataCols.StateOfSample,
    HCDataCols.AnalyticalQuantity,
    HCDataCols.AnalyticalQuantityUnit,
    HCDataCols.ProjectCode,
    HCDataCols.ProjectName,
    HCDataCols.ProjectDescription,
    HCDataCols.Organization
];

// Different types of operators for the quantitative results
export const QuantitativeOps = {
    Eq: "=",
    Lt: "<",
    Gt: ">",
    Le: "<=",
    Ge: ">=",
    Approx: "~"
}

// Different states for a sample
export const SampleState = {
    Detected: "detected",
    NotDetected: "not detected",
    NotTested: "not tested",
    InConclusive: "inconclusive"
}

// order to display the states of the samples in the graph
export const SampleStateOrdering = {};
SampleStateOrdering[SampleState.Detected] = 0;
SampleStateOrdering[SampleState.NotDetected] = 1;
SampleStateOrdering[SampleState.NotTested] = 2;

export const SampleStateOrder = Object.values(SampleState).sort((state1, state2) => SampleStateOrdering[state1] - SampleStateOrdering[state2]);

// colour variables for the states
export const SampleStateColours = {};
SampleStateColours[SampleState.Detected] = "var(--detected)";
SampleStateColours[SampleState.NotDetected] = "var(--notDetected)";
SampleStateColours[SampleState.NotTested] = "var(--notTested)";

export const MaxGraphColours = 50;

// Attributes names for the summary data
export const SummaryAtts = {
    FoodName: "foodName",
    Microorganism: "microorganism",
    Samples: "samples",
    Detected: SampleState.Detected,
    NotTested: SampleState.NotTested,
    NotDetected: SampleState.NotDetected,
    Tested: "tested",
    PercentDetected: "percentDetected",
    State: "state",
    StateVal: "stateVal",
    SamplesWithConcentration: "samplesWithConcentrations",
    ConcentrationMean: "concentrationMean",
    ConcentrationRange: "concentrationRange",
    DateTime: "dateTime",
    TimeGroupName: "timeGroupName"
}

// Different ways of how to combine graphs
export const CombineGraphTypes = {
    ByFood: "byFood",
    ByMicroorganism: "byMicroorganism"
}

// Columns for the Summary Statistics table
export const SummaryTableCols = [
    SummaryAtts.FoodName,
    SummaryAtts.Microorganism,
    SummaryAtts.PercentDetected,
    SummaryAtts.Detected,
    SummaryAtts.Tested,
    SummaryAtts.ConcentrationMean,
    SummaryAtts.ConcentrationRange,
    SummaryAtts.SamplesWithConcentration
];

// DefaultDims: Default dimensions used for certain dimension attributes
export const DefaultDims = {
    fontSize: 12,
    paddingSize: 5,
    pos: 0,
    length: 0,
    borderWidth: 3,
    lineSpacing: 1
};

// Dims: Dimensions used in the visuals
export const Dims = {
    overviewBarGraph: {
        HeadingFontSize: 28,
        AxesFontSize: 20,
        TickFontSize: 14,
        minGraphWidth: 600,
        GraphWidth: 900,
        GraphTop: 120,
        GraphBottom: 80,
        GraphLeft: 220,
        GraphRight: 200,
        BarHeight: 80,
        YAxisTickNameWidth: 140,
        XAxisNumOfTicks: 10,
        LegendSquareSize: 12,
        LegendLeftMargin: 50,
        LegendFontSize: 12,
        FooterPaddingHor: 20,
        FooterPaddingTop: 40,
        FooterFontSize: 12,
        TooltipMinWidth: 140,
        TooltipHeight: 50,
        TooltipPaddingVert: 8,
        TooltipPaddingHor: 10,
        TooltipTextPaddingVert: 3,
        TooltipTextPaddingHor: 5,
        TooltipBorderWidth: 3,
        TooltipFontSize: 14,
        TooltipTitleMarginBtm: 10,
    },

    trendsOverTimeGraph: {
        HeadingFontSize: 28,
        AxesFontSize: 16,
        TickFontSize: 14,
        minGraphWidth: 500,
        OrigGraphWidth: 900,
        GraphWidth: 900,
        GraphTop: 120,
        GraphBottom: 80,
        GraphLeft: 220,
        GraphRight: 350,
        SubGraphMarginTop: 40,
        SubGraphMarginBottom: 40,
        SubGraphHeight: 240,
        SubGraphKeyFontSize: 12,
        SubGraphKeyWidth: 170,
        SubGraphBarWidth: 10,
        SubGraphBarGroupMargin: 5,
        SubGraphMinBarGroupWidth: 50,
        SubGraphMinKeyWidth: 80,
        SubGraphMaxKeyWidth: 500,
        SubGraphLeftYAxisLabelLeft: 170,
        SubGraphRightYAxisLabelLeft: 60,
        SubGraphXAxisLabelSmallestMaxWidth: 180,
        SubGraphYAxisLabelMaxWidth: 200,
        LegendSquareSize: 12,
        LegendLeftMargin: 100,
        LegendFontSize: 12,
        LegendTextMaxWidth: 180,
        TooltipMinWidth: 140,
        TooltipHeight: 50,
        TooltipPaddingVert: 8,
        TooltipPaddingHor: 10,
        TooltipTextPaddingVert: 3,
        TooltipTextPaddingHor: 5,
        TooltipBorderWidth: 3,
        TooltipFontSize: 14,
        TooltipTitleMarginBtm: 10,
        pointRadius: 3
    }
}

// text wrap attributes
export const TextWrap  = {
    NoWrap: "No Wrap",
    Wrap: "Wrap"
};

// Overall display of the data
export const NumberView = {
    Number: "number",
    Percentage: "percentage"
};

// Different states to show no data easter egg
export const NoDataStates = {
    Normal: "normal",
    Doggy: "doggy",
    Kitty: "kitty"
};

// Different states for how to group the data by time
export const TimeGroup = {
    Months: "months",
    Years: "years",
    Overall: "overall"
}

// ############################################################
// ################## THEMES ##################################

export const ThemeNames = {
    Light: "light",
    Dark: "dark",
    Blue: "blue"
}

export const DefaultTheme = ThemeNames.Light;

export const Themes = {};


// Note: we base the colour theme from Android's Material UI
// https://m2.material.io/develop/android/theming/color
// https://m2.material.io/design/color/the-color-system.html

// See here for Infobase's colour scheme: https://design-system.alpha.canada.ca/en/styles/colour/
Themes[ThemeNames.Light] = {
    fontColour: "#333333",
    background: "#ffffff",
    surface: "#ffffff",
    secondarySurface: "#fbfcf8",
    error: "#ff0000",
    onBackground: "#000000",
    onSurface: "#000000",
    onSecondarySurface: "#000000",
    onError: "#ffffff",
    primary: "#26374a",
    primaryVariant: "#3B4B5C",
    onPrimary: "#ffffff",
    primaryBorderColour: "#7D828B",
    primaryHover: "#444444",
    onPrimaryHover: "#ffffff",
    secondary: "#335075",
    onSecondary: "#ffffff",
    secondaryHover: "#753350",
    onSecondaryHover: "#f2f2f2",
    secondaryBorderColour: "#bbbfc5",
    tertiary: "#d7faff",
    tertiaryBorderColour: "#269abc",
    onTertiary: "#333333",
    link: "#284162",
    headerTitleColor: "#000000",

    detected: "#C5705D",
    notDetected: "#41B3A2",
    notTested: "#cc9900",
    unknown: "#cccccc",

    trendsOverTimeLine: "#69b3a2",
    trendsOverTimePoint: "red",

    graphColours: [
        "#26374a",
        "#335075",
        "#d7faff",
        "#444444",
        "#753350",
        "#269abc",
        "#3B4B5C",
        "#476182",
        "#c1e1e5",
        "#565656",
        "#824761",
        "#228aa9",
        "#515F6E",
        "#5b7290",
        "#acc8cc",
        "#696969",
        "#905b72",
        "#1e7b96",
        "#677380",
        "#70849e",
        "#96afb2",
        "#7c7c7c",
        "#9e7084",
        "#1a6b83",
        "#7C8792",
        "#8496ac",
        "#819699",
        "#8e8e8e",
        "#ac8496",
        "#165c70",
        "#929BA4",
        "#99a7ba",
        "#6b7d7f",
        "#a1a1a1",
        "#ba99a7",
        "#134d5e",
        "#A8AFB6",
        "#adb9c7",
        "#566466",
        "#b4b4b4",
        "#c7adb9",
        "#0f3d4b"
    ]
};

Themes[ThemeNames.Dark] = {
    fontColour: "#ffffff",
    background: "#120E0B",
    surface: "#191919",
    secondarySurface: "#252525",
    error: "#ff0000",
    onBackground: "#ffffff",
    onSurface: "#ffffff",
    onSecondarySurface: "#ffffff",
    onError: "#ffffff",
    primary: "#515F6E",
    primaryVariant: "#626f7c",
    onPrimary: "#ffffff",
    primaryBorderColour: "#d6d8db",
    primaryHover: "#7c7c7c",
    onPrimaryHover: "#ffffff",
    secondary: "#5781b6",
    onSecondary: "#ffffff",
    secondaryHover: "#b65781",
    onSecondaryHover: "#f2f2f2",
    secondaryBorderColour: "#d6d8db",
    tertiary: "#d7faff",
    tertiaryBorderColour: "#269abc",
    onTertiary: "#333333",
    link: "#3e6598",
    headerTitleColor: "#ffffff",

    detected: "#C5705D",
    notDetected: "#41B3A2",
    notTested: "#cc9900",
    unknown: "#cccccc",

    trendsOverTimeLine: "#69b3a2",
    trendsOverTimePoint: "red",

    graphColours: [
        "#26374a",
        "#335075",
        "#d7faff",
        "#444444",
        "#753350",
        "#269abc",
        "#3B4B5C",
        "#476182",
        "#c1e1e5",
        "#565656",
        "#824761",
        "#228aa9",
        "#515F6E",
        "#5b7290",
        "#acc8cc",
        "#696969",
        "#905b72",
        "#1e7b96",
        "#677380",
        "#70849e",
        "#96afb2",
        "#7c7c7c",
        "#9e7084",
        "#1a6b83",
        "#7C8792",
        "#8496ac",
        "#819699",
        "#8e8e8e",
        "#ac8496",
        "#165c70",
        "#929BA4",
        "#99a7ba",
        "#6b7d7f",
        "#a1a1a1",
        "#ba99a7",
        "#134d5e",
        "#A8AFB6",
        "#adb9c7",
        "#566466",
        "#b4b4b4",
        "#c7adb9",
        "#0f3d4b"
    ]
};

// Primary ---> Mountain Haze Theme: https://www.canva.com/colors/color-palettes/mountain-haze/
// Secondary --> Mermaid Lagoon Theme: https://www.canva.com/colors/color-palettes/mermaid-lagoon/
Themes[ThemeNames.Blue] = {
    fontColour: "#333333",
    background: "#ffffff",
    surface: "#ffffff",
    secondarySurface: "#fbfcf8",
    error: "#ff0000",
    onBackground: "#000000",
    onSurface: "#000000",
    onSecondarySurface: "#000000",
    onError: "#ffffff",
    primary: "#738fa7",
    primaryVariant: "#678096",
    onPrimary: "#ffffff",
    primaryBorderColour: "#7D828B",
    primaryHover: "#0c4160",
    onPrimaryHover: "#ffffff",
    secondary: "#0c2d48",
    onSecondary: "#b1d4e0",
    secondaryHover: "#2e8bc0",
    onSecondaryHover: "#c0dce6",
    secondaryBorderColour: "#145da0",
    tertiary: "#abacca",
    tertiaryBorderColour: "#7375a7",
    onTertiary: "#ffffff",
    link: "#284162",
    headerTitleColor: "#333333",

    detected: "#cc6600",
    notDetected: "#009999",
    notTested: "#666699",
    unknown: "#cccccc",

    trendsOverTimeLine: "#69b3a2",
    trendsOverTimePoint: "red",

    graphColours: [
        "#26374a",
        "#335075",
        "#d7faff",
        "#444444",
        "#753350",
        "#269abc",
        "#3B4B5C",
        "#476182",
        "#c1e1e5",
        "#565656",
        "#824761",
        "#228aa9",
        "#515F6E",
        "#5b7290",
        "#acc8cc",
        "#696969",
        "#905b72",
        "#1e7b96",
        "#677380",
        "#70849e",
        "#96afb2",
        "#7c7c7c",
        "#9e7084",
        "#1a6b83",
        "#7C8792",
        "#8496ac",
        "#819699",
        "#8e8e8e",
        "#ac8496",
        "#165c70",
        "#929BA4",
        "#99a7ba",
        "#6b7d7f",
        "#a1a1a1",
        "#ba99a7",
        "#134d5e",
        "#A8AFB6",
        "#adb9c7",
        "#566466",
        "#b4b4b4",
        "#c7adb9",
        "#0f3d4b"
    ]
};

// ############################################################
// ################## TRANSLATIONS ############################


const REMPLACER_MOI = "REMPLACER MOI"
const REMPLACER_MOI_AVEC_ARGUMENTS = `${REMPLACER_MOI} - les arguments du texte: `

// ============== ENGLISH =======================

// names for the main navigation pages
const NavigationEN = {};
NavigationEN[Pages.Home] = "Home";
NavigationEN[Pages.TrendsOverTime] = "Trends Over Time";
NavigationEN[Pages.Overview] = "Overview";
NavigationEN[Pages.About] = "About";
NavigationEN[Pages.Contact] = "Contact";

// names for colour themes
const ColourThemesEN = {};
ColourThemesEN[ThemeNames.Light] = "Light"
ColourThemesEN[ThemeNames.Dark] = "Dark"
ColourThemesEN[ThemeNames.Blue] = "Blue"

// names for the "Trends Over Time" sections
const TrendsOverTimeTabsEN = {};
TrendsOverTimeTabsEN[TrendsOverTimeTabs.ByFood] = "By Food";
TrendsOverTimeTabsEN[TrendsOverTimeTabs.ByMicroorganism] = "By Microorganism";

// names for the "Overview" sections
const OverviewTabsEN = {};
OverviewTabsEN[OverviewTabs.ByFood] = "By Food";
OverviewTabsEN[OverviewTabs.ByMicroorganism] = "By Microorganism";
OverviewTabsEN[OverviewTabs.ByOrg] = "By Org";

// names for the filters
const FilterNamesEN = {};
FilterNamesEN[Pages.TrendsOverTime] = {};
FilterNamesEN[Pages.Overview] = {};
Object.keys(TrendsOverTimeTabs).forEach((section) => { FilterNamesEN[Pages.TrendsOverTime][section] = {} });
Object.keys(OverviewTabs).forEach((section) => { FilterNamesEN[Pages.TrendsOverTime][section] = {} });

// Filter names for "Trends Over Time" ==> "By Food"
FilterNamesEN[Pages.TrendsOverTime][TrendsOverTimeTabs.ByFood] = {
    "dataType": "1. Select DataType",
    "surveyType": "2. Select Survey Type",
    "food": "3. Select Food(s)",
    "microorganism": "4. Select Microorganism",
    "year": "5. Select Year",
    "adjustGraph": "6. Adjust Graph"
}

// Filter names for "Trends Over Time" ==> "By Microorganism"
FilterNamesEN[Pages.TrendsOverTime][TrendsOverTimeTabs.ByMicroorganism] = {
    "dataType": "1. Select DataType",
    "surveyType": "2. Select Survey Type",
    "microorganism": "3. Select Microorganism",
    "food": "4. Select Food(s)",
    "year": "5. Select Year",
    "adjustGraph": "6. Adjust Graph"
}

// Filter names for "Overview" ==> "By Microorganism"
FilterNamesEN[Pages.Overview][OverviewTabs.ByMicroorganism] = {
    "microorganism": "1. Select Microorganism",
    "surveyType": "2. Select Survey Type",
    "year": "3. Select Year",
    "adjustGraph": "4. Adjust Graph"
}

// Filter names for "Overview" ==> "By Food"
FilterNamesEN[Pages.Overview][OverviewTabs.ByFood] = {
    "food": "1. Select Food(s)",
    "surveyType": "2. Select Survey Type",
    "year": "3. Select Year",
    "adjustGraph": "4. Adjust Graph"
}

// Filter names for "Overview" ==> "By Org"
FilterNamesEN[Pages.Overview][OverviewTabs.ByOrg] = {
    "surveyType": "1. Select Survey Type"
}

// Survey Types
const SurveyTypesEN = {};
SurveyTypesEN[SurveyTypes.HC] = "HC Surveys";
SurveyTypesEN[SurveyTypes.PHAC] = "PHAC FoodNet";
SurveyTypesEN[SurveyTypes.CFIANMMP] = "CFIA NMMP";
SurveyTypesEN[SurveyTypes.CFIATargeted] = "CFIA Targeted Surveys";
SurveyTypesEN[SurveyTypes.CFIAOther] = "CFIA Other Surveys";

// names for the Data Types
const DataTypeNamesEN = {};
DataTypeNamesEN[MicroBioDataTypes.PresenceAbsence] = "Presence/Absence"
DataTypeNamesEN[MicroBioDataTypes.Concentration] = "Concentration"

// names for the percentage/number views
const NumberViewEN = {};
NumberViewEN[NumberView.Number] = "# positive";
NumberViewEN[NumberView.Percentage] = "% positive";

// names for the time groups
const TimeGroupEN = {};
TimeGroupEN[TimeGroup.Months] = "Months";
TimeGroupEN[TimeGroup.Years] = "Years";
TimeGroupEN[TimeGroup.Overall] = "Overall";

// name of the group for 'All Microorganisms' on the microroganism tree
const allMicroorganismsEN = "All Microorganisms";

// Genuses used in the Denominator calculations
// Note: Copy the exact values from the [Agent] and [Genus] column in "CANLINE Micro -no... .csv"
const denomGenusesEN = [[allMicroorganismsEN, "Bacteria", "Vibrio"].join(PhylogeneticDelim),
                         [allMicroorganismsEN, "Bacteria", "Salmonella"].join(PhylogeneticDelim),
                         [allMicroorganismsEN, "Bacteria", "Escherichia"].join(PhylogeneticDelim),
                         [allMicroorganismsEN, "Bacteria", "Listeria"].join(PhylogeneticDelim),
                         [allMicroorganismsEN, "Virus", "Hepatovirus"].join(PhylogeneticDelim),
                         [allMicroorganismsEN, "Virus", "Norovirus"].join(PhylogeneticDelim),
                         [allMicroorganismsEN, "Virus", "Orthohepevirus"].join(PhylogeneticDelim),
                         [allMicroorganismsEN, "Virus", "Rotavirus"].join(PhylogeneticDelim),
                         [allMicroorganismsEN, "Parasite", "Cryptosporidium"].join(PhylogeneticDelim),
                         [allMicroorganismsEN, "Parasite", "Cyclospora"].join(PhylogeneticDelim),
                         [allMicroorganismsEN, "Parasite", "Giardia"].join(PhylogeneticDelim),
                         [allMicroorganismsEN, "Parasite", "Toxoplasma"].join(PhylogeneticDelim)];

// Unique keyword to search for the microorganism tree for Typed EColi that are not Virulent
const NotVirulentEN = "Not Virulent";

// microorganisms that are hidden from the tree select
const hiddenMicroorganismsEN = [[allMicroorganismsEN, "Bacteria", "Escherichia", "coli", "Typed", NotVirulentEN].join(PhylogeneticDelim)];

// Different options for the qualitative results
// Note: Copy the exact value from the "Qualitative Result" column in "CANLINE Micro -no... .csv", then convert the name to lowercase without any trailing/leading spaces
const QualitaiveResultsEN = {};
QualitaiveResultsEN[SampleState.Detected] = "detected";
QualitaiveResultsEN[SampleState.NotDetected] = "not detected";
QualitaiveResultsEN[SampleState.NotTested] = "not tested";
QualitaiveResultsEN[SampleState.InConclusive] = "inconclusive";

// labels for the x-axis of the overview bar graph
const overviewBarGraphXAxisEN = {};
overviewBarGraphXAxisEN[NumberView.Number] = "Number of Samples";
overviewBarGraphXAxisEN[NumberView.Percentage] = "Percentage";

// labels for the x-axis of the TrendsOverTime graph
const trendsOverTimeXAxisEN = {};
trendsOverTimeXAxisEN[TimeGroup.Months] = "Months";
trendsOverTimeXAxisEN[TimeGroup.Years] = "Years";
trendsOverTimeXAxisEN[TimeGroup.Overall] = "Overall";

// labels for the y-axis of the TrendsOverTime graph
const trendsOverTimeYAxisEN = {};
trendsOverTimeYAxisEN[NumberView.Number] = "# Detected";
trendsOverTimeYAxisEN[NumberView.Percentage] = "% Detected";

// names for the columns on the table
const tableColsEN = {};
tableColsEN[SummaryAtts.FoodName] = "Food Name";
tableColsEN[SummaryAtts.Microorganism] = "Pathogen Branch";
tableColsEN[SummaryAtts.PercentDetected] = "% Detected";
tableColsEN[SummaryAtts.Detected] = "# Detected";
tableColsEN[SummaryAtts.Tested] = "# Tested Samples";
tableColsEN[SummaryAtts.SamplesWithConcentration] = "# Samples with Conc. Data"
tableColsEN[SummaryAtts.ConcentrationMean] = "Conc. Mean (cfu/g)"
tableColsEN[SummaryAtts.ConcentrationRange] = "Conc. Range (cfu/g)"

// names for the columns of the table in the CSV file
// Note: CSV treats the hashtag(#) as a comment
const csvtableColsEN = {};
csvtableColsEN[SummaryAtts.FoodName] = "Food Name";
csvtableColsEN[SummaryAtts.Microorganism] = "Pathogen Branch";
csvtableColsEN[SummaryAtts.PercentDetected] = "% Detected";
csvtableColsEN[SummaryAtts.Detected] = "No. of Detected";
csvtableColsEN[SummaryAtts.Samples] = "No. of Samples";
csvtableColsEN[SummaryAtts.SamplesWithConcentration] = "No. of Samples with Conc. Data"
csvtableColsEN[SummaryAtts.ConcentrationMean] = "Conc. Mean (cfu/g)"
csvtableColsEN[SummaryAtts.ConcentrationRange] = "Conc. Range (cfu/g)"

// Easter Egg when displaying the description for no data available
const NoDataDescEN = {};
NoDataDescEN[NoDataStates.Normal] = "The graph is empty...";
NoDataDescEN[NoDataStates.Doggy] = "It is empty around here... Here is a puppy to keep you company!";
NoDataDescEN[NoDataStates.Kitty] = "It is empty around here... Here is a kitty to keep you company!";

// title/labels in the Overview bar graph
const overviewBarGraphEN = {
    "tooltip": [
        "{{ state }}",
        "{{ number }}"
    ]
};
overviewBarGraphEN[SummaryAtts.FoodName] = {
    "graphTitle": "Selected Qualitative Result by Microorganisms",
    "xAxis": overviewBarGraphXAxisEN,
    "yAxis": "Food Name"
};

overviewBarGraphEN[SummaryAtts.Microorganism] = {
    "graphTitle": "Selected Qualitative Result by Food",
    "xAxis": overviewBarGraphXAxisEN,
    "yAxis": "Microorganism"
};

// title/labels in the TrendsOverTime graph
const trendsOverTimeGraphEN = {
    "barTooltip": [
        "{{ subKey }}",
        "{{ detectedNum }} detected samples",
        "{{ testedNum }} tested samples",
        "{{ dateTime }}"
    ],
    "pointTooltip": [
        "{{ subKey }}",
        "{{ dateTime }}"
    ]
};
trendsOverTimeGraphEN[SummaryAtts.FoodName] = {
    "graphTitle": "Microorganisms Detected in Food",
    "xAxis": trendsOverTimeXAxisEN,
    "yAxis": trendsOverTimeYAxisEN,
    "yAxisRight": "# Samples"
}

trendsOverTimeGraphEN[SummaryAtts.Microorganism] = {
    "graphTitle": "Food Detected in Microorganisms",
    "xAxis": trendsOverTimeXAxisEN,
    "yAxis": trendsOverTimeYAxisEN,
    "yAxisRight": "# Samples"
}

const LangEN = {
    Number: "{{num, number}}",

    "websiteTitle": "Microbiology Tool",
    "websiteTabTitle": "FSDAT -Microbiology",
    "websiteDescription": "FSDAT -Microbiology",
    "changeLanguage": "Français",
    "changeLanguageValue": Languages.French,
    "showMenu": "Show Menu",
    "hideMenu": "Hide Menu",
    "loading": "Loading...",
    "close": "Close",
    "clearFilters": "Clear Filters",
    
    navigation: NavigationEN,
    themes: ColourThemesEN,
    TrendsOverTimeTabs: TrendsOverTimeTabsEN,
    OverviewTabs: OverviewTabsEN,
    filterNames: FilterNamesEN,

    "allFoodGroups": "All Food Groups",
    "allFoods": "All Foods",
    "selectFoods": "Select Foods",
    "allMicroorganisms": allMicroorganismsEN,
    "nonSpeciated": "Non Speciated",
    "notVirulent": NotVirulentEN,
    "selectAll": "Select All",
    "deselectAll": "Deselect All",
    "noResultsFound": "No results matched {0}",
    "noData": "No Data Available",
    noDataDesc: NoDataDescEN,
    noDataPopupDesc: {
        "graph": "The graph is empty...",
        "table": "The table is empty..."
    },

    "foodGroupLabel": "Food Groups:",
    "foodLabel": "Foods:",
    "microorganismLabel": "Microorganisms:",

    "showResultAsLabel": "Show Result As:",

    surveyTypes: SurveyTypesEN,
    dataTypes: DataTypeNamesEN,
    qualitativeResults: QualitaiveResultsEN,
    numberview: NumberViewEN,
    timegroup: TimeGroupEN,

    denomGenuses: denomGenusesEN,
    hiddenMicroorganisms: hiddenMicroorganismsEN,

    "tableTitle": "Statistical Summary",
    "csvTitle": {
        "table": "{{ graphTitle }} {{ tableTitle }}",
        "data": "{{ graphTitle }} Data"
    },
    tableCols: tableColsEN,
    csvTableCols: csvtableColsEN,
    overviewBarGraph: overviewBarGraphEN,
    trendsOverTimeGraph: trendsOverTimeGraphEN,
    "graphSourceText": "Source: Health Canada, Food Surveillance Data Analytics Tool – Microbiology",

    "downloadGraph": "Download Graph",
    "downloadTable": "Download Table",
    "downloadData": "Download Data",

    // reference: https://datatables.net/plug-ins/i18n/English.html
    // note:
    //  For some reason the CDN link provided in the documentation causes
    //  some errors with the datatables, so we copied the content of the
    //  translation JSON file here
    dataTable: {
        "emptyTable": "No data available in table",
        "info": "Showing _START_ to _END_ of _TOTAL_ entries",
        "infoEmpty": "Showing 0 to 0 of 0 entries",
        "infoFiltered": "(filtered from _MAX_ total entries)",
        "infoThousands": ",",
        "lengthMenu": "Show _MENU_ entries",
        "loadingRecords": "Loading...",
        "processing": "Processing...",
        "search": "Search:",
        "zeroRecords": "No matching records found",
        "thousands": ",",
        "paginate": {
            "first": "First",
            "last": "Last",
            "next": "Next",
            "previous": "Previous"
        },
        "aria": {
            "sortAscending": ": activate to sort column ascending",
            "sortDescending": ": activate to sort column descending"
        },
        "autoFill": {
            "cancel": "Cancel",
            "fill": "Fill all cells with <i>%d</i>",
            "fillHorizontal": "Fill cells horizontally",
            "fillVertical": "Fill cells vertically"
        },
        "buttons": {
            "collection": "Collection <span class='ui-button-icon-primary ui-icon ui-icon-triangle-1-s'/>",
            "colvis": "Column Visibility",
            "colvisRestore": "Restore visibility",
            "copy": "Copy",
            "copyKeys": "Press ctrl or u2318 + C to copy the table data to your system clipboard.<br><br>To cancel, click this message or press escape.",
            "copySuccess": {
                "1": "Copied 1 row to clipboard",
                "_": "Copied %d rows to clipboard"
            },
            "copyTitle": "Copy to Clipboard",
            "csv": "CSV",
            "excel": "Excel",
            "pageLength": {
                "-1": "Show all rows",
                "_": "Show %d rows"
            },
            "pdf": "PDF",
            "print": "Print",
            "updateState": "Update",
            "stateRestore": "State %d",
            "savedStates": "Saved States",
            "renameState": "Rename",
            "removeState": "Remove",
            "removeAllStates": "Remove All States",
            "createState": "Create State"
        },
        "searchBuilder": {
            "add": "Add Condition",
            "button": {
                "0": "Search Builder",
                "_": "Search Builder (%d)"
            },
            "clearAll": "Clear All",
            "condition": "Condition",
            "conditions": {
                "date": {
                    "after": "After",
                    "before": "Before",
                    "between": "Between",
                    "empty": "Empty",
                    "equals": "Equals",
                    "not": "Not",
                    "notBetween": "Not Between",
                    "notEmpty": "Not Empty"
                },
                "number": {
                    "between": "Between",
                    "empty": "Empty",
                    "equals": "Equals",
                    "gt": "Greater Than",
                    "gte": "Greater Than Equal To",
                    "lt": "Less Than",
                    "lte": "Less Than Equal To",
                    "not": "Not",
                    "notBetween": "Not Between",
                    "notEmpty": "Not Empty"
                },
                "string": {
                    "contains": "Contains",
                    "empty": "Empty",
                    "endsWith": "Ends With",
                    "equals": "Equals",
                    "not": "Not",
                    "notEmpty": "Not Empty",
                    "startsWith": "Starts With",
                    "notContains": "Does Not Contain",
                    "notStartsWith": "Does Not Start With",
                    "notEndsWith": "Does Not End With"
                },
                "array": {
                    "without": "Without",
                    "notEmpty": "Not Empty",
                    "not": "Not",
                    "contains": "Contains",
                    "empty": "Empty",
                    "equals": "Equals"
                }
            },
            "data": "Data",
            "deleteTitle": "Delete filtering rule",
            "leftTitle": "Outdent Criteria",
            "logicAnd": "And",
            "logicOr": "Or",
            "rightTitle": "Indent Criteria",
            "title": {
                "0": "Search Builder",
                "_": "Search Builder (%d)"
            },
            "value": "Value"
        },
        "searchPanes": {
            "clearMessage": "Clear All",
            "collapse": {
                "0": "SearchPanes",
                "_": "SearchPanes (%d)"
            },
            "count": "{total}",
            "countFiltered": "{shown} ({total})",
            "emptyPanes": "No SearchPanes",
            "loadMessage": "Loading SearchPanes",
            "title": "Filters Active - %d",
            "showMessage": "Show All",
            "collapseMessage": "Collapse All"
        },
        "select": {
            "cells": {
                "1": "1 cell selected",
                "_": "%d cells selected"
            },
            "columns": {
                "1": "1 column selected",
                "_": "%d columns selected"
            },
            "rows": {
                "1": "1 row selected",
                "_": "%d rows selected"
            }
        },
        "datetime": {
            "previous": "Previous",
            "next": "Next",
            "hours": "Hour",
            "minutes": "Minute",
            "seconds": "Second",
            "unknown": "-",
            "amPm": [
                "am",
                "pm"
            ],
            "weekdays": [
                "Sun",
                "Mon",
                "Tue",
                "Wed",
                "Thu",
                "Fri",
                "Sat"
            ],
            "months": [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December"
            ]
        },
        "editor": {
            "close": "Close",
            "create": {
                "button": "New",
                "title": "Create new entry",
                "submit": "Create"
            },
            "edit": {
                "button": "Edit",
                "title": "Edit Entry",
                "submit": "Update"
            },
            "remove": {
                "button": "Delete",
                "title": "Delete",
                "submit": "Delete",
                "confirm": {
                    "1": "Are you sure you wish to delete 1 row?",
                    "_": "Are you sure you wish to delete %d rows?"
                }
            },
            "error": {
                "system": "A system error has occurred (<a target=\"\\\" rel=\"nofollow\" href=\"\\\">More information</a>)."
            },
            "multi": {
                "title": "Multiple Values",
                "info": "The selected items contain different values for this input. To edit and set all items for this input to the same value, click or tap here, otherwise they will retain their individual values.",
                "restore": "Undo Changes",
                "noMulti": "This input can be edited individually, but not part of a group. "
            }
        },
        "stateRestore": {
            "renameTitle": "Rename State",
            "renameLabel": "New Name for %s:",
            "renameButton": "Rename",
            "removeTitle": "Remove State",
            "removeSubmit": "Remove",
            "removeJoiner": " and ",
            "removeError": "Failed to remove state.",
            "removeConfirm": "Are you sure you want to remove %s?",
            "emptyStates": "No saved states",
            "emptyError": "Name cannot be empty.",
            "duplicateError": "A state with this name already exists.",
            "creationModal": {
                "toggleLabel": "Includes:",
                "title": "Create New State",
                "select": "Select",
                "searchBuilder": "SearchBuilder",
                "search": "Search",
                "scroller": "Scroll Position",
                "paging": "Paging",
                "order": "Sorting",
                "name": "Name:",
                "columns": {
                    "visible": "Column Visibility",
                    "search": "Column Search"
                },
                "button": "Create"
            }
        }
    }
}

// ==============================================
// ============== FRENCH ========================

// names for the main navigation options
const NavigationFR = {};
NavigationFR[Pages.Home] = REMPLACER_MOI;
NavigationFR[Pages.TrendsOverTime] = REMPLACER_MOI;
NavigationFR[Pages.Overview] = REMPLACER_MOI;
NavigationFR[Pages.About] = REMPLACER_MOI;
NavigationFR[Pages.Contact] = REMPLACER_MOI;

// names for colour themes
const ColourThemesFR = {};
ColourThemesFR[ThemeNames.Light] = "Clair"
ColourThemesFR[ThemeNames.Dark] = "Sombre"
ColourThemesFR[ThemeNames.Blue] = "Bleu"

// names for the "Trends Over Time" sections
const TrendsOverTimeTabsFR = {};
TrendsOverTimeTabsFR[TrendsOverTimeTabs.ByFood] = REMPLACER_MOI;
TrendsOverTimeTabsFR[TrendsOverTimeTabs.ByMicroorganism] = REMPLACER_MOI;

// names for the "Overview" sections
const OverviewTabsFR = {};
OverviewTabsFR[OverviewTabs.ByFood] = REMPLACER_MOI;
OverviewTabsFR[OverviewTabs.ByMicroorganism] = REMPLACER_MOI;
OverviewTabsFR[OverviewTabs.ByOrg] = REMPLACER_MOI;

// names for the filters
const FilterNamesFR = {};
FilterNamesFR[Pages.TrendsOverTime] = {};
FilterNamesFR[Pages.Overview] = {};
Object.keys(TrendsOverTimeTabs).forEach((section) => { FilterNamesFR[Pages.TrendsOverTime][section] = {} });
Object.keys(OverviewTabs).forEach((section) => { FilterNamesFR[Pages.TrendsOverTime][section] = {} });

// Filter names for "Trends Over Time" ==> "By Food"
FilterNamesFR[Pages.TrendsOverTime][TrendsOverTimeTabs.ByFood] = {
    "dataType": REMPLACER_MOI,
    "surveyType": REMPLACER_MOI,
    "food": REMPLACER_MOI,
    "microorganism": REMPLACER_MOI,
    "year": REMPLACER_MOI,
    "adjustGraph": REMPLACER_MOI
}

// Filter names for "Trends Over Time" ==> "By Microorganism"
FilterNamesFR[Pages.TrendsOverTime][TrendsOverTimeTabs.ByMicroorganism] = {
    "dataType": REMPLACER_MOI,
    "surveyType": REMPLACER_MOI,
    "microorganism": REMPLACER_MOI,
    "food": REMPLACER_MOI,
    "year": REMPLACER_MOI,
    "adjustGraph": REMPLACER_MOI
}

// Filter names for "Overview" ==> "By Microorganism"
FilterNamesFR[Pages.Overview][OverviewTabs.ByMicroorganism] = {
    "microorganism": REMPLACER_MOI,
    "surveyType": REMPLACER_MOI,
    "year": REMPLACER_MOI,
    "adjustGraph": REMPLACER_MOI
}

// Filter names for "Overview" ==> "By Food"
FilterNamesFR[Pages.Overview][OverviewTabs.ByFood] = {
    "food": REMPLACER_MOI,
    "surveyType": REMPLACER_MOI,
    "year": REMPLACER_MOI,
    "adjustGraph": REMPLACER_MOI
}

// Filter names for "Overview" ==> "By Org"
FilterNamesFR[Pages.Overview][OverviewTabs.ByOrg] = {
    "surveyType": REMPLACER_MOI
}

// Survey Types
const SurveyTypesFR = {};
SurveyTypesFR[SurveyTypes.HC] = `${REMPLACER_MOI} HC`;
SurveyTypesFR[SurveyTypes.PHAC] = `${REMPLACER_MOI} PHAC`;
SurveyTypesFR[SurveyTypes.CFIANMMP] = `${REMPLACER_MOI} CFIANNMP`;
SurveyTypesFR[SurveyTypes.CFIATargeted] = `${REMPLACER_MOI} CFIATargeted`;
SurveyTypesFR[SurveyTypes.CFIAOther] = `${REMPLACER_MOI} CFIAOther`;

// names for the Data Types
const DataTypeNamesFR = {};
DataTypeNamesFR[MicroBioDataTypes.PresenceAbsence] = REMPLACER_MOI;
DataTypeNamesFR[MicroBioDataTypes.Concentration] = REMPLACER_MOI;

// names for the percentage/number views
const NumberViewFR = {};
NumberViewFR[NumberView.Number] = REMPLACER_MOI;
NumberViewFR[NumberView.Percentage] = REMPLACER_MOI;

// names for the time groups
const TimeGroupFR = {};
TimeGroupFR[TimeGroup.Months] = REMPLACER_MOI;
TimeGroupFR[TimeGroup.Years] = REMPLACER_MOI;
TimeGroupFR[TimeGroup.Overall] = REMPLACER_MOI;

// name of the group for 'All Microorganisms' on the microroganism tree
const allMicroorganismsFR = REMPLACER_MOI;

// Genuses used in the Denominator calculations
// Note: Copy the exact values from the [Agent] and [Genus] column in "CANLINE Micro -no... .csv"
const denomGenusesFR = [[allMicroorganismsFR, "Bacteria", "Vibrio"].join(PhylogeneticDelim),
                         [allMicroorganismsFR, "Bacteria", "Salmonella"].join(PhylogeneticDelim),
                         [allMicroorganismsFR, "Bacteria", "Escherichia"].join(PhylogeneticDelim),
                         [allMicroorganismsFR, "Bacteria", "Listeria"].join(PhylogeneticDelim),
                         [allMicroorganismsFR, "Virus", "Hepatovirus"].join(PhylogeneticDelim),
                         [allMicroorganismsFR, "Virus", "Norovirus"].join(PhylogeneticDelim),
                         [allMicroorganismsFR, "Virus", "Orthohepevirus"].join(PhylogeneticDelim),
                         [allMicroorganismsFR, "Virus", "Rotavirus"].join(PhylogeneticDelim)];

// Unique keyword to search for the microorganism tree for Typed EColi that are not Virulent
const NotVirulentFR = "Not Virulent";

// microorganisms that are hidden from the tree select
const hiddenMicroorganismsFR = [[allMicroorganismsEN, "Bacteria", "Escherichia", "coli", "Typed", NotVirulentFR].join(PhylogeneticDelim)];

// Different options for the qualitative results
// Note: Copy the exact value from the "Qualitative Result" column in "CANLINE Micro -no... .csv", then convert the name to lowercase without any trailing/leading spaces
const QualitaiveResultsFR = {};
QualitaiveResultsFR[SampleState.Detected] = "detected";
QualitaiveResultsFR[SampleState.NotDetected] = "not detected";
QualitaiveResultsFR[SampleState.NotTested] = "not tested";
QualitaiveResultsFR[SampleState.InConclusive] = "inconclusive";

// labels for the x-axis of the overview bar graph
const overviewBarGraphXAxisFR = {};
overviewBarGraphXAxisFR[NumberView.Number] = REMPLACER_MOI;
overviewBarGraphXAxisFR[NumberView.Percentage] = REMPLACER_MOI;

// labels for the x-axis of the TrendsOverTime graph
const trendsOverTimeXAxisFR = {};
trendsOverTimeXAxisFR[TimeGroup.Months] = REMPLACER_MOI;
trendsOverTimeXAxisFR[TimeGroup.Years] = REMPLACER_MOI;
trendsOverTimeXAxisFR[TimeGroup.Overall] = REMPLACER_MOI;

// labels for the y-axis of the TrendOverTime graph
const trendsOverTimeYAxisFR = {};
trendsOverTimeYAxisFR[NumberView.Number] = REMPLACER_MOI;
trendsOverTimeYAxisFR[NumberView.Percentage] = REMPLACER_MOI;

// names for the columns on the table
const tableColsFR = {};
tableColsFR[SummaryAtts.FoodName] = REMPLACER_MOI;
tableColsFR[SummaryAtts.Microorganism] = REMPLACER_MOI;
tableColsFR[SummaryAtts.PercentDetected] = REMPLACER_MOI;
tableColsFR[SummaryAtts.Detected] = REMPLACER_MOI;
tableColsFR[SummaryAtts.Tested] = REMPLACER_MOI;
tableColsFR[SummaryAtts.SamplesWithConcentration] = REMPLACER_MOI;
tableColsFR[SummaryAtts.ConcentrationMean] = REMPLACER_MOI;
tableColsFR[SummaryAtts.ConcentrationRange] = REMPLACER_MOI;

// names for the columns of the table in the CSV file
// Note: CSV treats the hashtag(#) as a comment
const csvtableColsFR = {};
csvtableColsFR[SummaryAtts.FoodName] = REMPLACER_MOI;
csvtableColsFR[SummaryAtts.Microorganism] = REMPLACER_MOI;
csvtableColsFR[SummaryAtts.PercentDetected] = REMPLACER_MOI;
csvtableColsFR[SummaryAtts.Detected] = REMPLACER_MOI;
csvtableColsFR[SummaryAtts.Samples] = REMPLACER_MOI;
csvtableColsFR[SummaryAtts.SamplesWithConcentration] = REMPLACER_MOI;
csvtableColsFR[SummaryAtts.ConcentrationMean] = REMPLACER_MOI;
csvtableColsFR[SummaryAtts.ConcentrationRange] = REMPLACER_MOI;

// Easter Egg when displaying the description for no data available
const NoDataDescFR = {};
NoDataDescFR[NoDataStates.Normal] = "Le graphique est vide...";
NoDataDescFR[NoDataStates.Doggy] = "C'est vide ici... Voici un petit chien pour vous accompagner!";
NoDataDescFR[NoDataStates.Kitty] = "C'est vide ici... Voici un petit chaton pour vous accompagner!";

// title/labels in the Overview bar graph
const overviewBarGraphFR = {
    "tooltip": [
        "{{ state }}",
        "{{ number }}"
    ]
};
overviewBarGraphFR[SummaryAtts.FoodName] = {
    "graphTitle": REMPLACER_MOI,
    "xAxis": overviewBarGraphXAxisFR,
    "yAxis": REMPLACER_MOI
};

overviewBarGraphFR[SummaryAtts.Microorganism] = {
    "graphTitle": REMPLACER_MOI,
    "xAxis": overviewBarGraphXAxisFR,
    "yAxis": REMPLACER_MOI
};

// title/labels in the TrendsOverTime graph
const trendsOverTimeGraphFR = {
    "barTooltip": [
        `${REMPLACER_MOI_AVEC_ARGUMENTS} {{ subKey }}`,
        `${REMPLACER_MOI_AVEC_ARGUMENTS} {{ detectedNum }}`,
        `${REMPLACER_MOI_AVEC_ARGUMENTS} {{ testedNum }}`,
        `${REMPLACER_MOI_AVEC_ARGUMENTS} {{ dateTime }}`
    ],
};
trendsOverTimeGraphFR[SummaryAtts.FoodName] = {
    "graphTitle": REMPLACER_MOI,
    "xAxis": trendsOverTimeXAxisFR,
    "yAxis": trendsOverTimeYAxisFR,
    "yAxisRight": REMPLACER_MOI
}

trendsOverTimeGraphFR[SummaryAtts.Microorganism] = {
    "graphTitle": REMPLACER_MOI,
    "xAxis": trendsOverTimeXAxisFR,
    "yAxis": trendsOverTimeYAxisFR,
    "yAxisRight": REMPLACER_MOI
}

const LangFR = {
    Number: "{{num, number}}",

    "websiteTitle": REMPLACER_MOI,
    "websiteTabTitle": REMPLACER_MOI,
    "websiteDescription": REMPLACER_MOI,
    "changeLanguage": "English",
    "changeLanguageValue": Languages.English,
    "showMenu": REMPLACER_MOI,
    "hideMenu": REMPLACER_MOI,
    "loading": "Chargement en cours...",
    "close": "Fermer",
    "clearFilters": REMPLACER_MOI,

    navigation: NavigationFR,
    themes: ColourThemesFR,
    TrendsOverTimeTabs: TrendsOverTimeTabsFR,
    OverviewTabs: OverviewTabsFR,
    filterNames: FilterNamesFR,

    "allFoodGroups": REMPLACER_MOI,
    "allFoods": REMPLACER_MOI,
    "selectFoods": REMPLACER_MOI,
    "allMicroorganisms": allMicroorganismsFR,
    "nonSpeciated": REMPLACER_MOI,
    "notVirulent": NotVirulentFR,
    "selectAll": REMPLACER_MOI,
    "deselectAll": REMPLACER_MOI,
    "noResultsFound": `${REMPLACER_MOI_AVEC_ARGUMENTS} {0}`,
    "noData": "Aucune Donnée Disponible",
    noDataDesc: NoDataDescFR,
    noDataPopupDesc: {
        "graph": "Le graphique est vide...",
        "table": "Le tableau est vide..."
    },

    "foodGroupLabel": REMPLACER_MOI,
    "foodLabel": REMPLACER_MOI,
    "microorganismLabel": REMPLACER_MOI,

    "showResultAsLabel": REMPLACER_MOI,

    surveyTypes: SurveyTypesFR,
    dataTypes: DataTypeNamesFR,
    qualitativeResults: QualitaiveResultsFR,
    denomGenuses: denomGenusesFR,
    hiddenMicroorganisms: hiddenMicroorganismsFR,

    numberview: NumberViewFR,
    timegroup: TimeGroupFR,

    "tableTitle": REMPLACER_MOI,
    "csvTitle": {
        "table": `${REMPLACER_MOI_AVEC_ARGUMENTS}{{ graphTitle }} {{ tableTitle }}`,
        "data": `${REMPLACER_MOI_AVEC_ARGUMENTS}{{ graphTitle }}`
    },
    tableCols: tableColsFR,
    csvTableCols: csvtableColsFR,
    overviewBarGraph: overviewBarGraphFR,
    trendsOverTimeGraph: trendsOverTimeGraphFR,
    "graphSourceText": REMPLACER_MOI,

    "downloadGraph": REMPLACER_MOI,
    "downloadTable": REMPLACER_MOI,
    "downloadData": REMPLACER_MOI,

    // references: https://datatables.net/plug-ins/i18n/French.html
    // note:
    //  For some reason the CDN link provided in the documentation causes
    //  some errors with the datatables, so we copied the content of the
    //  translation JSON file here
    dataTable: {
        "emptyTable": "Aucune donnée disponible dans le tableau",
        "loadingRecords": "Chargement...",
        "processing": "Traitement...",
        "select": {
            "rows": {
                "1": "1 ligne sélectionnée",
                "_": "%d lignes sélectionnées"
            },
            "cells": {
                "1": "1 cellule sélectionnée",
                "_": "%d cellules sélectionnées"
            },
            "columns": {
                "1": "1 colonne sélectionnée",
                "_": "%d colonnes sélectionnées"
            }
        },
        "autoFill": {
            "cancel": "Annuler",
            "fill": "Remplir toutes les cellules avec <i>%d</i>",
            "fillHorizontal": "Remplir les cellules horizontalement",
            "fillVertical": "Remplir les cellules verticalement"
        },
        "searchBuilder": {
            "conditions": {
                "date": {
                    "after": "Après le",
                    "before": "Avant le",
                    "between": "Entre",
                    "empty": "Vide",
                    "not": "Différent de",
                    "notBetween": "Pas entre",
                    "notEmpty": "Non vide",
                    "equals": "Égal à"
                },
                "number": {
                    "between": "Entre",
                    "empty": "Vide",
                    "gt": "Supérieur à",
                    "gte": "Supérieur ou égal à",
                    "lt": "Inférieur à",
                    "lte": "Inférieur ou égal à",
                    "not": "Différent de",
                    "notBetween": "Pas entre",
                    "notEmpty": "Non vide",
                    "equals": "Égal à"
                },
                "string": {
                    "contains": "Contient",
                    "empty": "Vide",
                    "endsWith": "Se termine par",
                    "not": "Différent de",
                    "notEmpty": "Non vide",
                    "startsWith": "Commence par",
                    "equals": "Égal à",
                    "notContains": "Ne contient pas",
                    "notEndsWith": "Ne termine pas par",
                    "notStartsWith": "Ne commence pas par"
                },
                "array": {
                    "empty": "Vide",
                    "contains": "Contient",
                    "not": "Différent de",
                    "notEmpty": "Non vide",
                    "without": "Sans",
                    "equals": "Égal à"
                }
            },
            "add": "Ajouter une condition",
            "button": {
                "0": "Recherche avancée",
                "_": "Recherche avancée (%d)"
            },
            "clearAll": "Effacer tout",
            "condition": "Condition",
            "data": "Donnée",
            "deleteTitle": "Supprimer la règle de filtrage",
            "logicAnd": "Et",
            "logicOr": "Ou",
            "title": {
                "0": "Recherche avancée",
                "_": "Recherche avancée (%d)"
            },
            "value": "Valeur",
            "leftTitle": "Désindenter le critère",
            "rightTitle": "Indenter le critère"
        },
        "searchPanes": {
            "clearMessage": "Effacer tout",
            "count": "{total}",
            "title": "Filtres actifs - %d",
            "collapse": {
                "0": "Volet de recherche",
                "_": "Volet de recherche (%d)"
            },
            "countFiltered": "{shown} ({total})",
            "emptyPanes": "Pas de volet de recherche",
            "loadMessage": "Chargement du volet de recherche...",
            "collapseMessage": "Réduire tout",
            "showMessage": "Montrer tout"
        },
        "buttons": {
            "collection": "Collection",
            "colvis": "Visibilité colonnes",
            "colvisRestore": "Rétablir visibilité",
            "copy": "Copier",
            "copySuccess": {
                "1": "1 ligne copiée dans le presse-papier",
                "_": "%d lignes copiées dans le presse-papier"
            },
            "copyTitle": "Copier dans le presse-papier",
            "csv": "CSV",
            "excel": "Excel",
            "pageLength": {
                "1": "Afficher 1 ligne",
                "-1": "Afficher toutes les lignes",
                "_": "Afficher %d lignes"
            },
            "pdf": "PDF",
            "print": "Imprimer",
            "copyKeys": "Appuyez sur ctrl ou u2318 + C pour copier les données du tableau dans votre presse-papier.",
            "createState": "Créer un état",
            "removeAllStates": "Supprimer tous les états",
            "removeState": "Supprimer",
            "renameState": "Renommer",
            "savedStates": "États sauvegardés",
            "stateRestore": "État %d",
            "updateState": "Mettre à jour"
        },
        "decimal": ",",
        "datetime": {
            "previous": "Précédent",
            "next": "Suivant",
            "hours": "Heures",
            "minutes": "Minutes",
            "seconds": "Secondes",
            "unknown": "-",
            "amPm": [
                "am",
                "pm"
            ],
            "months": {
                "0": "Janvier",
                "1": "Février",
                "2": "Mars",
                "3": "Avril",
                "4": "Mai",
                "5": "Juin",
                "6": "Juillet",
                "7": "Août",
                "8": "Septembre",
                "9": "Octobre",
                "10": "Novembre",
                "11": "Décembre"
            },
            "weekdays": [
                "Dim",
                "Lun",
                "Mar",
                "Mer",
                "Jeu",
                "Ven",
                "Sam"
            ]
        },
        "editor": {
            "close": "Fermer",
            "create": {
                "title": "Créer une nouvelle entrée",
                "button": "Nouveau",
                "submit": "Créer"
            },
            "edit": {
                "button": "Editer",
                "title": "Editer Entrée",
                "submit": "Mettre à jour"
            },
            "remove": {
                "button": "Supprimer",
                "title": "Supprimer",
                "submit": "Supprimer",
                "confirm": {
                    "1": "Êtes-vous sûr de vouloir supprimer 1 ligne ?",
                    "_": "Êtes-vous sûr de vouloir supprimer %d lignes ?"
                }
            },
            "multi": {
                "title": "Valeurs multiples",
                "info": "Les éléments sélectionnés contiennent différentes valeurs pour cette entrée. Pour modifier et définir tous les éléments de cette entrée à la même valeur, cliquez ou tapez ici, sinon ils conserveront leurs valeurs individuelles.",
                "restore": "Annuler les modifications",
                "noMulti": "Ce champ peut être modifié individuellement, mais ne fait pas partie d'un groupe. "
            },
            "error": {
                "system": "Une erreur système s'est produite (<a target=\"\\\" rel=\"nofollow\" href=\"\\\">Plus d'information</a>)."
            }
        },
        "stateRestore": {
            "removeSubmit": "Supprimer",
            "creationModal": {
                "button": "Créer",
                "order": "Tri",
                "paging": "Pagination",
                "scroller": "Position du défilement",
                "search": "Recherche",
                "select": "Sélection",
                "columns": {
                    "search": "Recherche par colonne",
                    "visible": "Visibilité des colonnes"
                },
                "name": "Nom :",
                "searchBuilder": "Recherche avancée",
                "title": "Créer un nouvel état",
                "toggleLabel": "Inclus :"
            },
            "renameButton": "Renommer",
            "duplicateError": "Il existe déjà un état avec ce nom.",
            "emptyError": "Le nom ne peut pas être vide.",
            "emptyStates": "Aucun état sauvegardé",
            "removeConfirm": "Voulez vous vraiment supprimer %s ?",
            "removeError": "Échec de la suppression de l'état.",
            "removeJoiner": "et",
            "removeTitle": "Supprimer l'état",
            "renameLabel": "Nouveau nom pour %s :",
            "renameTitle": "Renommer l'état"
        },
        "info": "Affichage de _START_ à _END_ sur _TOTAL_ entrées",
        "infoEmpty": "Affichage de 0 à 0 sur 0 entrées",
        "infoFiltered": "(filtrées depuis un total de _MAX_ entrées)",
        "lengthMenu": "Afficher _MENU_ entrées",
        "paginate": {
            "first": "Première",
            "last": "Dernière",
            "next": "Suivante",
            "previous": "Précédente"
        },
        "zeroRecords": "Aucune entrée correspondante trouvée",
        "aria": {
            "sortAscending": " : activer pour trier la colonne par ordre croissant",
            "sortDescending": " : activer pour trier la colonne par ordre décroissant"
        },
        "infoThousands": " ",
        "search": "Rechercher :",
        "thousands": " "
    }
}

// ==============================================

export const TranslationObj = {};
TranslationObj[Languages.English] = {translation: LangEN};
TranslationObj[Languages.French] = {translation: LangFR};

// ############################################################